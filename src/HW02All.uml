<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_c-0T0NNCEem2FpOoiMKSDA" name="HW02All">
    <eAnnotations xmi:id="_dJItcNNCEem2FpOoiMKSDA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_dJJUgNNCEem2FpOoiMKSDA" source="codegen">
        <details xmi:id="_dJJUgdNCEem2FpOoiMKSDA" key="codegenDirectory" value="/HW02/src"/>
        <details xmi:id="_dzl_sNNCEem2FpOoiMKSDA" key="AssociatedSourceCode" value="/HW02/src/ballModel/Model.java;1479622247/1;/HW02/src/balls/ColorBreathingBall.java;1160215349/1;/HW02/src/balls/ErrorBall.java;2576545861/1;/HW02/src/balls/IModel2ViewAdapter.java;2523701649/1;/HW02/src/balls/StraightBall.java;294870423/1;/HW02/src/balls/TrippyBall.java;1229898076/1;/HW02/src/balls/VelChangeBall.java;1394562696/1;/HW02/src/controller/Controller.java;3461832026/1;/HW02/src/provided/util/dispatcher/IDispatcher.java;1758823152/1;/HW02/src/provided/util/dispatcher/IObserver.java;2807653554/1;/HW02/src/provided/util/dispatcher/impl/ADispatcher.java;1059636821/1;/HW02/src/provided/util/dispatcher/impl/ParallelDispatcher.java;2581244571/1;/HW02/src/provided/util/dispatcher/impl/SequentialDispatcher.java;73641381/1;/HW02/src/provided/util/displayModel/IATImage.java;793687901/1;/HW02/src/provided/util/displayModel/IDimension.java;1489167108/1;/HW02/src/provided/util/loader/IObjectLoader.java;1727166689/1;/HW02/src/provided/util/loader/impl/ObjectLoader.java;4066182165/1;/HW02/src/provided/util/valueGenerator/IRandomizer.java;3461744146/1;/HW02/src/provided/util/valueGenerator/ISineMaker.java;1195078911/1;/HW02/src/provided/util/valueGenerator/impl/Randomizer.java;3826789746/1;/HW02/src/provided/util/valueGenerator/impl/SineMaker.java;359713276/1;/HW02/src/view/IView2ModelAdapter.java;3296930006/1;/HW02/src/view/MyFrame.java;2102464933/1;/HW02/src/balls/ABall.java;1730948850/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_deQo4NNCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_deRP8NNCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_deRP8dNCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_deRP8tNCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_deRP89NCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_deR3ANNCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_deR3AdNCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_deR3AtNCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_deSeENNCEem2FpOoiMKSDA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_deTsMNNCEem2FpOoiMKSDA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_deUTQNNCEem2FpOoiMKSDA" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_de3s4NNCEem2FpOoiMKSDA" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_dpBuctNCEem2FpOoiMKSDA" name="AffineTransform"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_dfU_4NNCEem2FpOoiMKSDA" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_dpRmEdNCEem2FpOoiMKSDA" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dpS0MdNCEem2FpOoiMKSDA" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_doj0YNNCEem2FpOoiMKSDA" name="Graphics"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dokbcdNCEem2FpOoiMKSDA" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dolCgdNCEem2FpOoiMKSDA" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dooF0NNCEem2FpOoiMKSDA" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dooF0tNCEem2FpOoiMKSDA" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_doxPwNNCEem2FpOoiMKSDA" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_do_5QNNCEem2FpOoiMKSDA" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpAgUdNCEem2FpOoiMKSDA" name="Image"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpBHYNNCEem2FpOoiMKSDA" name="MediaTracker"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dpBucNNCEem2FpOoiMKSDA" name="Shape"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpSNIdNCEem2FpOoiMKSDA" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqCbE9NCEem2FpOoiMKSDA" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_deUTQdNCEem2FpOoiMKSDA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_dewYINNCEem2FpOoiMKSDA" name="concurrent">
          <packagedElement xmi:type="uml:Class" xmi:id="_do2vUdNCEem2FpOoiMKSDA" name="ConcurrentSkipListSet"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_de3s4dNCEem2FpOoiMKSDA" name="function">
          <packagedElement xmi:type="uml:Interface" xmi:id="_dpCVgdNCEem2FpOoiMKSDA" name="BiFunction"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dpF_4dNCEem2FpOoiMKSDA" name="Function"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dolpkdNCEem2FpOoiMKSDA" name="Arrays"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_domQodNCEem2FpOoiMKSDA" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_doyd4NNCEem2FpOoiMKSDA" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_do2IQNNCEem2FpOoiMKSDA" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpEKsNNCEem2FpOoiMKSDA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpExwdNCEem2FpOoiMKSDA" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dpFY0dNCEem2FpOoiMKSDA" name="Map"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dejj0NNCEem2FpOoiMKSDA" name="lang">
        <packagedElement xmi:type="uml:Package" xmi:id="_de8lYNNCEem2FpOoiMKSDA" name="reflect">
          <packagedElement xmi:type="uml:Class" xmi:id="_dp7GUNNCEem2FpOoiMKSDA" name="Constructor"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_douMcNNCEem2FpOoiMKSDA" name="Math"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpyjcdNCEem2FpOoiMKSDA" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dp0_sNNCEem2FpOoiMKSDA" name="Class"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dp8UcdNCEem2FpOoiMKSDA" name="IllegalArgumentException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_deU6UNNCEem2FpOoiMKSDA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_deU6UdNCEem2FpOoiMKSDA" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_dfUY0NNCEem2FpOoiMKSDA" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_dpQ_ANNCEem2FpOoiMKSDA" name="EmptyBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dom3sdNCEem2FpOoiMKSDA" name="Timer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpPw4NNCEem2FpOoiMKSDA" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpQX8dNCEem2FpOoiMKSDA" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpQ_AtNCEem2FpOoiMKSDA" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpTbQdNCEem2FpOoiMKSDA" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dpUCUdNCEem2FpOoiMKSDA" name="DefaultComboBoxModel"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_deU6UtNCEem2FpOoiMKSDA" name="balls">
      <packagedElement xmi:type="uml:Class" xmi:id="_dgI4MNNCEem2FpOoiMKSDA" name="ColorBreathingBall">
        <ownedComment xmi:id="_drAEZtNCEem2FpOoiMKSDA">
          <body>Creates a ball that changes color and size as it moves&#xD;
&#xD;
@author BJ Kim and William Su&#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_dorJINNCEem2FpOoiMKSDA" general="_dhgxMNNCEem2FpOoiMKSDA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq0eNNNCEem2FpOoiMKSDA" name="ColorBreathingBall" specification="_dpjS4NNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq0eNdNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dq0eNtNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq0eN9NCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq0eONNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq0eOdNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq0eOtNCEem2FpOoiMKSDA" type="_dgI4MNNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>super(radius, loc, vel, color, frame);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq1FQNNCEem2FpOoiMKSDA" name="move" specification="_dgJfQNNCEem2FpOoiMKSDA">
          <language>java</language>
          <body>IRandomizer rand = Randomizer.Singleton;&#xD;
		// Set the new color.&#xD;
		super.setColor(rand.randomColor());&#xD;
&#xD;
		// Set the new size.&#xD;
		super.setRadius(rand.randomInt(10, 30));&#xD;
		super.move();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dgJfQNNCEem2FpOoiMKSDA" name="move" method="_dq1FQNNCEem2FpOoiMKSDA"/>
        <ownedOperation xmi:id="_dpjS4NNCEem2FpOoiMKSDA" name="ColorBreathingBall" method="_dq0eNNNCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dpj59dNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dpj59tNCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_dpj58NNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dpj58dNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpj58tNCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpj589NCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpj59NNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpj599NCEem2FpOoiMKSDA" type="_dgI4MNNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dgL7gNNCEem2FpOoiMKSDA" name="ErrorBall">
        <ownedComment xmi:id="_drAEZ9NCEem2FpOoiMKSDA">
          <body>Creates an ErrorBall that does is not drawn on the frame&#xD;
&#xD;
@author BJ Kim and William Su</body>
        </ownedComment>
        <generalization xmi:id="_dosXQNNCEem2FpOoiMKSDA" general="_dhgxMNNCEem2FpOoiMKSDA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq1FQdNCEem2FpOoiMKSDA" name="ErrorBall" specification="_dpkhANNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq1FQtNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dq1FQ9NCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1FRNNCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1FRdNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1FRtNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1FR9NCEem2FpOoiMKSDA" type="_dgL7gNNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>super(0, loc, vel, color, frame);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dpkhANNCEem2FpOoiMKSDA" name="ErrorBall" method="_dq1FQdNCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dplIFNNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dplIFdNCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_dpkhAdNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dplIENNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dplIEdNCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dplIEtNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dplIE9NCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dplIFtNCEem2FpOoiMKSDA" type="_dgL7gNNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_dgNwsNNCEem2FpOoiMKSDA" name="IModel2ViewAdapter">
        <ownedComment xmi:id="_drAEaNNCEem2FpOoiMKSDA">
          <body>Model-to-view adapter to communicate with the view without &#xD;
knowing about it&#xD;
&#xD;
@author BJ Kim and William Su</body>
        </ownedComment>
        <ownedAttribute xmi:id="_dgOXwdNCEem2FpOoiMKSDA" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_dgNwsNNCEem2FpOoiMKSDA" isReadOnly="true" association="_drLqkNNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dgO-0NNCEem2FpOoiMKSDA" value="new IModel2ViewAdapter() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;public void update() {&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_dgOXwNNCEem2FpOoiMKSDA" name="update">
          <ownedComment xmi:id="_drAEadNCEem2FpOoiMKSDA">
            <body>Updates the balls, to be implemented</body>
          </ownedComment>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dgPl4NNCEem2FpOoiMKSDA" name="StraightBall">
        <ownedComment xmi:id="_drAEatNCEem2FpOoiMKSDA">
          <body>Creates a straight-traveling constant velocity ball&#xD;
&#xD;
@author BJ Kim and William Su</body>
        </ownedComment>
        <generalization xmi:id="_dotlYNNCEem2FpOoiMKSDA" general="_dhgxMNNCEem2FpOoiMKSDA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq1sUNNCEem2FpOoiMKSDA" name="StraightBall" specification="_dplvINNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq1sUdNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dq1sUtNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1sU9NCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1sVNNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1sVdNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1sVtNCEem2FpOoiMKSDA" type="_dgPl4NNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>super(radius, loc, vel, color, frame);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dplvINNCEem2FpOoiMKSDA" name="StraightBall" method="_dq1sUNNCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dpmWMdNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dpmWMtNCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_dplvIdNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dplvItNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dplvI9NCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dplvJNNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpmWMNNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpmWM9NCEem2FpOoiMKSDA" type="_dgPl4NNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dgRbENNCEem2FpOoiMKSDA" name="TrippyBall">
        <ownedComment xmi:id="_drAEa9NCEem2FpOoiMKSDA">
          <body>Creates &quot;trippy&quot; ball that travels in a circle, changes size, AND changes color (cool!)&#xD;
&#xD;
@author BJ Kim and William Su</body>
        </ownedComment>
        <generalization xmi:id="_dovakNNCEem2FpOoiMKSDA" general="_dhgxMNNCEem2FpOoiMKSDA"/>
        <ownedAttribute xmi:id="_dqfuENNCEem2FpOoiMKSDA" name="theta" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq1sV9NCEem2FpOoiMKSDA" name="TrippyBall" specification="_dpm9QNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq1sWNNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dq1sWdNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1sWtNCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1sW9NCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1sXNNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq1sXdNCEem2FpOoiMKSDA" type="_dgRbENNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>super(radius, loc, vel, color, frame);&#xD;
&#xD;
		IRandomizer rand = Randomizer.Singleton;&#xD;
		theta = rand.randomDouble(0.1, 0.4);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq2TYNNCEem2FpOoiMKSDA" name="move" specification="_dgSpMNNCEem2FpOoiMKSDA">
          <language>java</language>
          <body>IRandomizer rand = Randomizer.Singleton;&#xD;
&#xD;
		// Change the color.&#xD;
		super.setColor(rand.randomColor());&#xD;
&#xD;
		// Change the size.&#xD;
		super.setRadius(rand.randomInt(10, 70));&#xD;
&#xD;
		// Make it move in a circle.&#xD;
		int newX = (int) Math.round((vel.x * Math.cos(this.theta)) - (vel.y * Math.sin(this.theta)));&#xD;
		int newY = (int) Math.round((vel.y * Math.cos(this.theta)) + (vel.x * Math.sin(this.theta)));&#xD;
		super.setVel(new Point(newX, newY));&#xD;
		super.move();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dgSpMNNCEem2FpOoiMKSDA" name="move" method="_dq2TYNNCEem2FpOoiMKSDA"/>
        <ownedOperation xmi:id="_dpm9QNNCEem2FpOoiMKSDA" name="TrippyBall" method="_dq1sV9NCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dpnkUNNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dpnkUdNCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_dpm9QdNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dpm9QtNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpm9Q9NCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpm9RNNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpm9RdNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpnkUtNCEem2FpOoiMKSDA" type="_dgRbENNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dgVsgNNCEem2FpOoiMKSDA" name="VelChangeBall">
        <ownedComment xmi:id="_drArcNNCEem2FpOoiMKSDA">
          <body>Creates a ball that changes velocity when it hits a wall&#xD;
(just changes the velocity component that would have changed when the &#xD;
ball bounces)&#xD;
&#xD;
@author BJ Kim and William Su&#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_dowosNNCEem2FpOoiMKSDA" general="_dhgxMNNCEem2FpOoiMKSDA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq2TYdNCEem2FpOoiMKSDA" name="VelChangeBall" specification="_dpoLYNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq2TYtNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dq2TY9NCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq2TZNNCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq2TZdNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq2TZtNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq2TZ9NCEem2FpOoiMKSDA" type="_dgVsgNNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>super(radius, loc, vel, color, frame);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq2TaNNCEem2FpOoiMKSDA" name="bounce" specification="_dgW6oNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq2TadNCEem2FpOoiMKSDA" name="changeX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dq2TatNCEem2FpOoiMKSDA" name="changeY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>IRandomizer rand = Randomizer.Singleton;&#xD;
&#xD;
		if (changeX) {&#xD;
			if (vel.x &lt; 0) {&#xD;
				vel.x = rand.randomInt(10, 25);&#xD;
			} else {&#xD;
				vel.x = rand.randomInt(-25, -10);&#xD;
			}&#xD;
		}&#xD;
		if (changeY) {&#xD;
			if (vel.y &lt; 0) {&#xD;
				vel.y = rand.randomInt(10, 25);&#xD;
			} else {&#xD;
				vel.y = rand.randomInt(-25, -10);&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dgW6oNNCEem2FpOoiMKSDA" name="bounce" method="_dq2TaNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dgXhsNNCEem2FpOoiMKSDA" name="changeX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dgXhsdNCEem2FpOoiMKSDA" name="changeY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_dpoLYNNCEem2FpOoiMKSDA" name="VelChangeBall" method="_dq2TYdNCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dpoLZtNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dpoLZ9NCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_dpoLYdNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dpoLYtNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpoLY9NCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpoLZNNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpoLZdNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpoycNNCEem2FpOoiMKSDA" type="_dgVsgNNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dhgxMNNCEem2FpOoiMKSDA" name="ABall" isAbstract="true">
        <ownedComment xmi:id="_drDuxdNCEem2FpOoiMKSDA">
          <body>Defines an abstract ABall with color, moving, bouncing, and painting capabilities&#xD;
&#xD;
@author BJ Kim and William Su&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_dqvlsdNCEem2FpOoiMKSDA" name="radius" visibility="protected">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqwMwdNCEem2FpOoiMKSDA" name="frame" visibility="protected" type="_dooF0tNCEem2FpOoiMKSDA" association="_drX30NNCEem2FpOoiMKSDA"/>
        <ownedAttribute xmi:id="_dqwMw9NCEem2FpOoiMKSDA" name="loc" visibility="protected" type="_dokbcdNCEem2FpOoiMKSDA" association="_drYe4NNCEem2FpOoiMKSDA"/>
        <ownedAttribute xmi:id="_dqwz0dNCEem2FpOoiMKSDA" name="color" visibility="protected" type="_dooF0NNCEem2FpOoiMKSDA" association="_drYe49NCEem2FpOoiMKSDA"/>
        <ownedAttribute xmi:id="_dqxa4NNCEem2FpOoiMKSDA" name="vel" visibility="protected" type="_dokbcdNCEem2FpOoiMKSDA" association="_drZF8dNCEem2FpOoiMKSDA"/>
        <interfaceRealization xmi:id="_dpXssNNCEem2FpOoiMKSDA" client="_dhgxMNNCEem2FpOoiMKSDA" supplier="_dghSsNNCEem2FpOoiMKSDA" contract="_dghSsNNCEem2FpOoiMKSDA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9BGtNCEem2FpOoiMKSDA" name="ABall" specification="_dqUH4NNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq9BG9NCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dq9BHNNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq9BHdNCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq9BHtNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq9BH9NCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq9BINNCEem2FpOoiMKSDA" type="_dhgxMNNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>this.radius = radius;&#xD;
		this.loc = loc;&#xD;
		this.color = color;&#xD;
		this.vel = vel;&#xD;
		this.frame = frame;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9oINNCEem2FpOoiMKSDA" name="getFrame" specification="_dhh_UNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq9oIdNCEem2FpOoiMKSDA" type="_dooF0tNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>return frame;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9oItNCEem2FpOoiMKSDA" name="setRadius" specification="_dhimYNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq9oI9NCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>this.radius = radius;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9oJNNCEem2FpOoiMKSDA" name="getRadius" specification="_dhjNcNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq9oJdNCEem2FpOoiMKSDA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return radius;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9oJtNCEem2FpOoiMKSDA" name="setLoc" specification="_dqVWANNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq9oJ9NCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <language>java</language>
          <body>this.loc = loc;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq-PMNNCEem2FpOoiMKSDA" name="getLoc" specification="_dhj0gNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq-PMdNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>return loc;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq-PMtNCEem2FpOoiMKSDA" name="setColor" specification="_dqV9ENNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq-PM9NCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <language>java</language>
          <body>this.color = color;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq-PNNNCEem2FpOoiMKSDA" name="getColor" specification="_dhj0gdNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq-PNdNCEem2FpOoiMKSDA" type="_dooF0NNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>return color;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq-PNtNCEem2FpOoiMKSDA" name="getVel" specification="_dhkbkNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq-PN9NCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>return vel;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq-PONNCEem2FpOoiMKSDA" name="setVel" specification="_dqWkIdNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq-POdNCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <language>java</language>
          <body>this.vel = vel;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq-POtNCEem2FpOoiMKSDA" name="paint" specification="_dqXLMNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq-PO9NCEem2FpOoiMKSDA" name="g" type="_doj0YNNCEem2FpOoiMKSDA"/>
          <language>java</language>
          <body>g.setColor(color);&#xD;
		g.fillOval(loc.x - radius, loc.y - radius, 2 * radius, 2 * radius);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq-2QNNCEem2FpOoiMKSDA" name="move" specification="_dhlCoNNCEem2FpOoiMKSDA">
          <language>java</language>
          <body>//anticipate the next location&#xD;
		int nextX = loc.x + vel.x;&#xD;
		int nextY = loc.y + vel.y;&#xD;
&#xD;
		//track if x or y were changed&#xD;
		boolean xChanged = false;&#xD;
		boolean yChanged = false;&#xD;
&#xD;
		//If the ball bounces on the left wall&#xD;
		if (nextX - radius &lt; 0) {&#xD;
			loc.x = Math.abs(nextX - radius) + radius;&#xD;
			xChanged = true;&#xD;
		}&#xD;
&#xD;
		// If the ball bounces on the right wall&#xD;
		else if (nextX + radius > this.getFrame().getWidth()) {&#xD;
			loc.x = getFrame().getWidth() - Math.abs(nextX + radius - getFrame().getWidth()) - radius;&#xD;
			xChanged = true;&#xD;
		}&#xD;
&#xD;
		// If the ball bounces on the top wall&#xD;
		if (nextY - radius &lt; 0) {&#xD;
			loc.y = Math.abs(nextY - radius) + radius;&#xD;
			yChanged = true;&#xD;
		}&#xD;
&#xD;
		// If the ball bounces on the bottom wall&#xD;
		else if (nextY + radius > this.getFrame().getHeight()) {&#xD;
			loc.y = getFrame().getHeight() - Math.abs(nextY + radius - getFrame().getHeight()) - radius;&#xD;
			yChanged = true;&#xD;
		}&#xD;
&#xD;
		// move x or y normally if it has not been changed already&#xD;
		if (!xChanged) {&#xD;
			loc.x += vel.x;&#xD;
		}&#xD;
		if (!yChanged) {&#xD;
			loc.y += vel.y;&#xD;
		}&#xD;
&#xD;
		// check if the ball bounced&#xD;
		bounce(xChanged, yChanged);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq-2QdNCEem2FpOoiMKSDA" name="bounce" specification="_dhlCodNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq-2QtNCEem2FpOoiMKSDA" name="changeX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dq-2Q9NCEem2FpOoiMKSDA" name="changeY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>//reverse velocity component if it changes from bounce&#xD;
		if (changeX) {&#xD;
			vel.x *= -1;&#xD;
		}&#xD;
		if (changeY) {&#xD;
			vel.y *= -1;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq_dUNNCEem2FpOoiMKSDA" name="update" specification="_dqXLMtNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq_dUdNCEem2FpOoiMKSDA" name="disp" type="_dgbzINNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq_dUtNCEem2FpOoiMKSDA" name="g" type="_doj0YNNCEem2FpOoiMKSDA"/>
          <language>java</language>
          <body>move();&#xD;
		paint(g);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dhh_UNNCEem2FpOoiMKSDA" name="getFrame" method="_dq9oINNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDux9NCEem2FpOoiMKSDA">
            <body>Getter for the ball's frame&#xD;
	* &#xD;
	* @return Frame frame</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqUu9dNCEem2FpOoiMKSDA" type="_dooF0tNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dhimYNNCEem2FpOoiMKSDA" name="setRadius" method="_dq9oItNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDuyNNCEem2FpOoiMKSDA">
            <body>Setter for the radius&#xD;
	* &#xD;
	* @param radius The radius of the ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_dhimYdNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_dhjNcNNCEem2FpOoiMKSDA" name="getRadius" method="_dq9oJNNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDuydNCEem2FpOoiMKSDA">
            <body>Getter for the radius&#xD;
	* &#xD;
	* @return int radius of ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_dhjNcdNCEem2FpOoiMKSDA" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_dhj0gNNCEem2FpOoiMKSDA" name="getLoc" method="_dq-PMNNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDuy9NCEem2FpOoiMKSDA">
            <body>Getter for center location of ball&#xD;
	 * &#xD;
	 * @return int loc</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqVWAtNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dhj0gdNCEem2FpOoiMKSDA" name="getColor" method="_dq-PNNNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drEV0NNCEem2FpOoiMKSDA">
            <body>Getter for the color&#xD;
	 *  &#xD;
	 * @return Color</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqV9EtNCEem2FpOoiMKSDA" type="_dooF0NNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dhkbkNNCEem2FpOoiMKSDA" name="getVel" method="_dq-PNtNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drEV0dNCEem2FpOoiMKSDA">
            <body>Getter for the velocity&#xD;
	 * &#xD;
	 * @return Point vel</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqWkINNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dhlCoNNCEem2FpOoiMKSDA" name="move" method="_dq-2QNNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drEV1NNCEem2FpOoiMKSDA">
            <body>Moves the ball on the panel</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dhlCodNCEem2FpOoiMKSDA" name="bounce" method="_dq-2QdNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drEV1dNCEem2FpOoiMKSDA">
            <body>Checks if the ball bounces, and changes x or y velocity if bounced&#xD;
	 * &#xD;
	 * @param changeX Boolean stating whether X velocity was changed or not&#xD;
	 * @param changeY Boolean stating whether X velocity was changed or not</body>
          </ownedComment>
          <ownedParameter xmi:id="_dhlCotNCEem2FpOoiMKSDA" name="changeX">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dhlpsNNCEem2FpOoiMKSDA" name="changeY">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_dqUH4NNCEem2FpOoiMKSDA" name="ABall" method="_dq9BGtNCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dqUu8tNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dqUu89NCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_drDuxtNCEem2FpOoiMKSDA">
            <body>Constructor for class ABall&#xD;
	* &#xD;
	* @param radius The radius of the ball&#xD;
	* @param loc The center coordinate of the ball&#xD;
	* @param vel The velocity vector of the ball&#xD;
	* @param color The color of the ball&#xD;
	* @param frame The frame to draw the ball on</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqUH4dNCEem2FpOoiMKSDA" name="radius">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dqUH4tNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dqUH49NCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dqUu8NNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dqUu8dNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dqUu9NNCEem2FpOoiMKSDA" type="_dhgxMNNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dqVWANNCEem2FpOoiMKSDA" name="setLoc" method="_dq9oJtNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDuytNCEem2FpOoiMKSDA">
            <body>setter for center of ball&#xD;
	 * &#xD;
	 * @param loc The center of the ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqVWAdNCEem2FpOoiMKSDA" name="loc" type="_dokbcdNCEem2FpOoiMKSDA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dqV9ENNCEem2FpOoiMKSDA" name="setColor" method="_dq-PMtNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDuzNNCEem2FpOoiMKSDA">
            <body>Setter for the ball's color&#xD;
	 * &#xD;
	 * @param color The color of the ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqV9EdNCEem2FpOoiMKSDA" name="color" type="_dooF0NNCEem2FpOoiMKSDA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dqWkIdNCEem2FpOoiMKSDA" name="setVel" method="_dq-PONNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drEV0tNCEem2FpOoiMKSDA">
            <body>Setter for the velocity of the ball&#xD;
	 * &#xD;
	 * @param vel The velocity of the ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqWkItNCEem2FpOoiMKSDA" name="vel" type="_dokbcdNCEem2FpOoiMKSDA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dqXLMNNCEem2FpOoiMKSDA" name="paint" method="_dq-POtNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drEV09NCEem2FpOoiMKSDA">
            <body>Paints the ball on the panel&#xD;
	 * &#xD;
	 * @param g The graphics object of the ball</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqXLMdNCEem2FpOoiMKSDA" name="g" type="_doj0YNNCEem2FpOoiMKSDA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dqXLMtNCEem2FpOoiMKSDA" name="update" method="_dq_dUNNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drEV1tNCEem2FpOoiMKSDA">
            <body>Checks if the ball bounces, and changes x or y velocity if bounced&#xD;
	 *&#xD;
	 * @param g Boolean stating whether X velocity was changed or not&#xD;
	 * @param disp Boolean stating whether X velocity was changed or not</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqXyQNNCEem2FpOoiMKSDA" name="disp" type="_dgbzINNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dqXyQdNCEem2FpOoiMKSDA" name="g" type="_doj0YNNCEem2FpOoiMKSDA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drLqkNNCEem2FpOoiMKSDA" name="" memberEnd="_drLqkdNCEem2FpOoiMKSDA _dgOXwdNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drLqkdNCEem2FpOoiMKSDA" name="" type="_dgNwsNNCEem2FpOoiMKSDA" association="_drLqkNNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drX30NNCEem2FpOoiMKSDA" name="" memberEnd="_drX30dNCEem2FpOoiMKSDA _dqwMwdNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drX30dNCEem2FpOoiMKSDA" name="" type="_dhgxMNNCEem2FpOoiMKSDA" association="_drX30NNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drYe4NNCEem2FpOoiMKSDA" name="" memberEnd="_drYe4dNCEem2FpOoiMKSDA _dqwMw9NCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drYe4dNCEem2FpOoiMKSDA" name="" type="_dhgxMNNCEem2FpOoiMKSDA" association="_drYe4NNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drYe49NCEem2FpOoiMKSDA" name="" memberEnd="_drYe5NNCEem2FpOoiMKSDA _dqwz0dNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drYe5NNCEem2FpOoiMKSDA" name="" type="_dhgxMNNCEem2FpOoiMKSDA" association="_drYe49NCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drZF8dNCEem2FpOoiMKSDA" name="" memberEnd="_drZF8tNCEem2FpOoiMKSDA _dqxa4NNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drZF8tNCEem2FpOoiMKSDA" name="" type="_dhgxMNNCEem2FpOoiMKSDA" association="_drZF8dNCEem2FpOoiMKSDA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_deVhYNNCEem2FpOoiMKSDA" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_deVhYdNCEem2FpOoiMKSDA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_deVhYtNCEem2FpOoiMKSDA" name="dispatcher">
          <packagedElement xmi:type="uml:Package" xmi:id="_deWIcNNCEem2FpOoiMKSDA" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_dgig0NNCEem2FpOoiMKSDA" name="ADispatcher" isAbstract="true">
              <ownedComment xmi:id="_drB5lNNCEem2FpOoiMKSDA">
                <body>Mid-level abstraction of a dispatcher that establishes the ability to hold and manage&#xD;
observers in a thread-safe manner.&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>  The type of messages that will be sent out to the observers.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dqiKUNNCEem2FpOoiMKSDA" name="comparator" visibility="private" type="_do2IQNNCEem2FpOoiMKSDA" association="_drRKIdNCEem2FpOoiMKSDA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqixYNNCEem2FpOoiMKSDA" value="new Comparator&lt;IObserver&lt;TMsg>>() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public int compare(IObserver&lt;TMsg> o1, IObserver&lt;TMsg> o2) {&#xD;&#xA;&#x9;&#x9;&#x9;if (o1.equals(o2)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return 0;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (o1.hashCode() &lt;= o2.hashCode()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return -1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return +1;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dqjYcdNCEem2FpOoiMKSDA" name="observers" visibility="private" type="_do2vUdNCEem2FpOoiMKSDA" association="_drRxMdNCEem2FpOoiMKSDA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqjYc9NCEem2FpOoiMKSDA" value="new ConcurrentSkipListSet&lt;IObserver&lt;TMsg>>(comparator)"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_do3WYdNCEem2FpOoiMKSDA" client="_dgig0NNCEem2FpOoiMKSDA" supplier="_dgbzINNCEem2FpOoiMKSDA" contract="_dgbzINNCEem2FpOoiMKSDA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq3hgNNCEem2FpOoiMKSDA" name="getObserverSet" specification="_dgkWANNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq3hgdNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dq3hgtNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return observers;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq3hg9NCEem2FpOoiMKSDA" name="addObserver" specification="_do5LkNNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq3hhNNCEem2FpOoiMKSDA" name="obs" type="_dghSsNNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq3hhdNCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return observers.add(obs);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq4IkNNCEem2FpOoiMKSDA" name="removeObserver" specification="_do6ZstNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq4IkdNCEem2FpOoiMKSDA" name="obs" type="_dghSsNNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq4IktNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>IObserver&lt;TMsg> foundObs = null; // in case obs is not in the collection.&#xD;
		// Note that equality does not guarantee that two objects are identically the same entity, &#xD;
		// so must retrieve the actual entity in the collection.&#xD;
		if (observers.contains(obs)) { // make sure it is in the collection &#xD;
			foundObs = observers.floor(obs); // returns the desired obs only because we already know that it is in the collection.&#xD;
			observers.remove(obs); // remove it from the collection&#xD;
		}&#xD;
		return foundObs;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq4Ik9NCEem2FpOoiMKSDA" name="getAllObservers" specification="_dglkINNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq4IlNNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dq4IldNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return observers.clone();&#xD;
		//		return new CopyOnWriteArraySet&lt;IObserver&lt;TMsg>>(observers);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq4IltNCEem2FpOoiMKSDA" name="removeAllObservers" specification="_dgnZUtNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq4Il9NCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dq4ImNNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>Set&lt;IObserver&lt;TMsg>> original_set = this.getAllObservers();&#xD;
		observers.clear();&#xD;
		return original_set;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dgkWANNCEem2FpOoiMKSDA" name="getObserverSet" visibility="protected" method="_dq3hgNNCEem2FpOoiMKSDA">
                <ownedComment xmi:id="_drB5ldNCEem2FpOoiMKSDA">
                  <body>Protected method to allow implementing subclasses access to the set of observers.&#xD;
	 * The actual set of observers is returned and is thus mutable.&#xD;
	 * @return The set of observers currently in use.  This is NOT a copy.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dgkWAdNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dgkWAtNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dglkINNCEem2FpOoiMKSDA" name="getAllObservers" method="_dq4Ik9NCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dgmLMNNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dgmLMdNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dgnZUtNCEem2FpOoiMKSDA" name="removeAllObservers" method="_dq4IltNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dgoAYNNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dgoAYdNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_do5LkNNCEem2FpOoiMKSDA" name="addObserver" method="_dq3hg9NCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_do5LkdNCEem2FpOoiMKSDA" name="obs" type="_dghSsNNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_do5LktNCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_do6ZstNCEem2FpOoiMKSDA" name="removeObserver" method="_dq4IkNNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_do6Zs9NCEem2FpOoiMKSDA" name="obs" type="_dghSsNNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_do7n0NNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dgsR0NNCEem2FpOoiMKSDA" name="ParallelDispatcher">
              <ownedComment xmi:id="_drB5ltNCEem2FpOoiMKSDA">
                <body>A dispatcher that updates its observers in parallel if possible on multiple threads.&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>  The type of message being sent to the observers.</body>
              </ownedComment>
              <generalization xmi:id="_do9dANNCEem2FpOoiMKSDA" general="_dgig0NNCEem2FpOoiMKSDA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq4voNNCEem2FpOoiMKSDA" name="updateAll" specification="_dpuSAdNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq4vodNCEem2FpOoiMKSDA" name="msg" type="_dptq8NNCEem2FpOoiMKSDA"/>
                <language>java</language>
                <body>this.getObserverSet().parallelStream().forEach((obs) -> obs.update(this, msg));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dpuSAdNCEem2FpOoiMKSDA" name="updateAll" method="_dq4voNNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dpuSAtNCEem2FpOoiMKSDA" name="msg" type="_dptq8NNCEem2FpOoiMKSDA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dguuENNCEem2FpOoiMKSDA" name="SequentialDispatcher">
              <ownedComment xmi:id="_drB5l9NCEem2FpOoiMKSDA">
                <body>A simple dispatcher that updates its observers sequentially on a single thread.&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>  The type of message being sent to the observers.</body>
              </ownedComment>
              <generalization xmi:id="_do-rINNCEem2FpOoiMKSDA" general="_dgig0NNCEem2FpOoiMKSDA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq4votNCEem2FpOoiMKSDA" name="updateAll" specification="_dpvgINNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq4vo9NCEem2FpOoiMKSDA" name="msg" type="_dptq8NNCEem2FpOoiMKSDA"/>
                <language>java</language>
                <body>this.getObserverSet().forEach((obs) -> obs.update(this, msg));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dpvgINNCEem2FpOoiMKSDA" name="updateAll" method="_dq4votNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dpvgIdNCEem2FpOoiMKSDA" name="msg" type="_dptq8NNCEem2FpOoiMKSDA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dptq8NNCEem2FpOoiMKSDA" name="TMsg"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_drRKIdNCEem2FpOoiMKSDA" name="" memberEnd="_drRKItNCEem2FpOoiMKSDA _dqiKUNNCEem2FpOoiMKSDA">
              <ownedEnd xmi:id="_drRKItNCEem2FpOoiMKSDA" name="" type="_dgig0NNCEem2FpOoiMKSDA" association="_drRKIdNCEem2FpOoiMKSDA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_drRxMdNCEem2FpOoiMKSDA" name="" memberEnd="_drRxMtNCEem2FpOoiMKSDA _dqjYcdNCEem2FpOoiMKSDA">
              <ownedEnd xmi:id="_drRxMtNCEem2FpOoiMKSDA" name="" type="_dgig0NNCEem2FpOoiMKSDA" association="_drRxMdNCEem2FpOoiMKSDA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dgbzINNCEem2FpOoiMKSDA" name="IDispatcher">
            <ownedComment xmi:id="_drBSgdNCEem2FpOoiMKSDA">
              <body>Top-level abstraction of a Dispatcher which is the Observable in the &#xD;
Observer-Observable Design Pattern without the requirement to set the state &#xD;
before sending a message to the observers.&#xD;
&#xD;
A Dispatcher sends IMsg-type messages to all its observers which therefore must &#xD;
be capable of receiving and processing those messages, i.e. are IObserver&amp;lt;TMSg&amp;gt;.&#xD;
 *&#xD;
To maximally decouple an application from the randomizer's implementation any variable representing a randomizer&#xD;
should be typed to this interface, not to any concrete implementation.  For example:&#xD;
IDispatcher&amp;lt;Graphics&amp;gt; myDispatcher = new SequentialDispatcher&amp;lt;Graphics&amp;gt;() &#xD;
&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>   The type of message to send to all the observers.</body>
            </ownedComment>
            <ownedAttribute xmi:id="_dgdoUNNCEem2FpOoiMKSDA" name="allObservers" type="_dghSsNNCEem2FpOoiMKSDA" association="_drBShNNCEem2FpOoiMKSDA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dgePYdNCEem2FpOoiMKSDA" value="*"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_dge2cNNCEem2FpOoiMKSDA" name="removeAllObservers">
              <ownedComment xmi:id="_drB5kdNCEem2FpOoiMKSDA">
                <body>Removes all the observers currently in the dispatcher&#xD;
	 * @return A COPY of the set of IObservers in the dispatcher before they were all removed.</body>
              </ownedComment>
              <ownedParameter xmi:id="_dge2cdNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dge2ctNCEem2FpOoiMKSDA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_dozE8dNCEem2FpOoiMKSDA" name="addObserver">
              <ownedComment xmi:id="_drBSgtNCEem2FpOoiMKSDA">
                <body>Add an observer to the dispatcher.   If the observer is already in the dispatcher, &#xD;
	 * as determined by the comparison (equals()) process, the dispatcher is NOT mutated and false is returned. &#xD;
	 * @param obs  The IObserver to add&#xD;
	 * @return true if the given observer was not already in the dispatcher, false otherwise.&#xD;
	 * @throws ClassCastException If the observer cannot be properly compared against the existing observers&#xD;
	 * @throws NullPointerException If the supplied value is null</body>
              </ownedComment>
              <ownedParameter xmi:id="_dozE8tNCEem2FpOoiMKSDA" name="obs" type="_dghSsNNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dozsANNCEem2FpOoiMKSDA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_dozsAtNCEem2FpOoiMKSDA" name="removeObserver">
              <ownedComment xmi:id="_drBSg9NCEem2FpOoiMKSDA">
                <body>Remove an observer from the dispatcher.   The dispatcher does not make any &#xD;
	 * assumptions that the observer being removed is identically the same object as &#xD;
	 * that it was requested to remove via the input parameter.  The returned object &#xD;
	 * is the object that was internally held by the dispatcher.&#xD;
	 * @param obs  The IObserver to add&#xD;
	 * @return The observer that was removed or null if it was not found.</body>
              </ownedComment>
              <ownedParameter xmi:id="_dozsA9NCEem2FpOoiMKSDA" name="obs" type="_dghSsNNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_do0TEdNCEem2FpOoiMKSDA" type="_dghSsNNCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_dpqAkdNCEem2FpOoiMKSDA" name="updateAll">
              <ownedComment xmi:id="_drB5ktNCEem2FpOoiMKSDA">
                <body>Send the given message to all the observers in the dispatcher &#xD;
	 * @param msg   The IMsg to send to all the observers</body>
              </ownedComment>
              <ownedParameter xmi:id="_dpqAktNCEem2FpOoiMKSDA" name="msg" type="_dppZgNNCEem2FpOoiMKSDA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dghSsNNCEem2FpOoiMKSDA" name="IObserver">
            <ownedComment xmi:id="_drB5k9NCEem2FpOoiMKSDA">
              <body>Top-level abstraction of the Observer in the Observer-Observable Design Pattern.&#xD;
An IObserver receives TMsg-type messages from its associated, matched Observable, &#xD;
an IDispatcher&amp;lt;TMsg&amp;gt;. &#xD;
@author swong&#xD;
 *&#xD;
@param &lt;TMsg>  The type of message this observer is capable of receiving and processing.</body>
            </ownedComment>
            <ownedOperation xmi:id="_dprOsNNCEem2FpOoiMKSDA" name="update">
              <ownedParameter xmi:id="_dprOsdNCEem2FpOoiMKSDA" name="disp" type="_dgbzINNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dprOstNCEem2FpOoiMKSDA" name="msg" type="_dppZgNNCEem2FpOoiMKSDA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_dppZgNNCEem2FpOoiMKSDA" name="TMsg"/>
          <packagedElement xmi:type="uml:Association" xmi:id="_drBShNNCEem2FpOoiMKSDA" name="" memberEnd="_dgdoUNNCEem2FpOoiMKSDA _drB5kNNCEem2FpOoiMKSDA">
            <ownedEnd xmi:id="_drB5kNNCEem2FpOoiMKSDA" name="" type="_dgbzINNCEem2FpOoiMKSDA" association="_drBShNNCEem2FpOoiMKSDA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_deWIcdNCEem2FpOoiMKSDA" name="valueGenerator">
          <packagedElement xmi:type="uml:Package" xmi:id="_deWIctNCEem2FpOoiMKSDA" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_dhJk0NNCEem2FpOoiMKSDA" name="Randomizer">
              <ownedComment xmi:id="_drDHtdNCEem2FpOoiMKSDA">
                <body>Concrete implementation of IRandomizer</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dqo4ANNCEem2FpOoiMKSDA" name="Singleton" isStatic="true" type="_dhJk0NNCEem2FpOoiMKSDA" association="_drS_U9NCEem2FpOoiMKSDA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqo4AdNCEem2FpOoiMKSDA" value="new Randomizer()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dpKRUNNCEem2FpOoiMKSDA" client="_dhJk0NNCEem2FpOoiMKSDA" supplier="_dg_z0NNCEem2FpOoiMKSDA" contract="_dg_z0NNCEem2FpOoiMKSDA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq6k0NNCEem2FpOoiMKSDA" name="randomLoc" specification="_dqGFcNNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq6k0dNCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq6k0tNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>return (new Point(randomInt(rect.x, rect.x + rect.width), randomInt(rect.y, rect.y + rect.height)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq7L4NNCEem2FpOoiMKSDA" name="randomLoc" specification="_dqH6otNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq7L4dNCEem2FpOoiMKSDA" name="dim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq7L4tNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>return (new Point(randomInt(0, dim.width), randomInt(0, dim.height)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq7L49NCEem2FpOoiMKSDA" name="randomInt" specification="_dhLaANNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq7L5NNCEem2FpOoiMKSDA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq7L5dNCEem2FpOoiMKSDA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq7L5tNCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return (int) Math.floor((Math.random() * (1 + max - min)) + min);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq7L59NCEem2FpOoiMKSDA" name="randomDouble" specification="_dhMoINNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq7L6NNCEem2FpOoiMKSDA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq7L6dNCEem2FpOoiMKSDA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq7L6tNCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>return (Math.random() * (max - min)) + min;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq7L69NCEem2FpOoiMKSDA" name="randomVel" specification="_dqKW4tNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq7L7NNCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq7L7dNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>return (new Point(randomInt(-rect.width, rect.width), randomInt(-rect.height, rect.height)));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq7y8NNCEem2FpOoiMKSDA" name="randomDim" specification="_dqMMENNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq7y8dNCEem2FpOoiMKSDA" name="maxDim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq7y8tNCEem2FpOoiMKSDA" type="_dqCbE9NCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>int x = randomInt(maxDim.width / 2, maxDim.width);&#xD;
		return new Dimension(x, x);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq7y89NCEem2FpOoiMKSDA" name="randomBounds" specification="_dqNaM9NCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq7y9NNCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq7y9dNCEem2FpOoiMKSDA" name="maxDim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq7y9tNCEem2FpOoiMKSDA" type="_dolCgdNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>return new Rectangle(randomLoc(rect), randomDim(maxDim));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq7y99NCEem2FpOoiMKSDA" name="randomColor" specification="_dhN2QNNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq7y-NNCEem2FpOoiMKSDA" type="_dooF0NNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>return new Color(randomInt(0, 255), randomInt(0, 255), randomInt(0, 255));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq7y-dNCEem2FpOoiMKSDA" name="randomChoice" specification="_dqP2cNNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq7y-tNCEem2FpOoiMKSDA" name="x" type="_dpyjcdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq7y-9NCEem2FpOoiMKSDA" name="y" type="_dpyjcdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq7y_NNCEem2FpOoiMKSDA" name="probX">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq7y_dNCEem2FpOoiMKSDA" type="_dpyjcdNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>return (Math.random() &lt; probX) ? x : y;&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dhKL4NNCEem2FpOoiMKSDA" name="Randomizer" visibility="private">
                <eAnnotations xmi:id="_dhKL4dNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dhKL4tNCEem2FpOoiMKSDA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dhKy8dNCEem2FpOoiMKSDA" type="_dhJk0NNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dhLaANNCEem2FpOoiMKSDA" name="randomInt" method="_dq7L49NCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dhLaAdNCEem2FpOoiMKSDA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dhLaAtNCEem2FpOoiMKSDA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dhMBENNCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dhMoINNCEem2FpOoiMKSDA" name="randomDouble" method="_dq7L59NCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dhMoIdNCEem2FpOoiMKSDA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dhMoItNCEem2FpOoiMKSDA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dhMoI9NCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dhN2QNNCEem2FpOoiMKSDA" name="randomColor" method="_dq7y99NCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dqOoUtNCEem2FpOoiMKSDA" type="_dooF0NNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqGFcNNCEem2FpOoiMKSDA" name="randomLoc" method="_dq6k0NNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dqGsgNNCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dqHTkNNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqH6otNCEem2FpOoiMKSDA" name="randomLoc" method="_dq7L4NNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dqH6o9NCEem2FpOoiMKSDA" name="dim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dqIhsNNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqKW4tNCEem2FpOoiMKSDA" name="randomVel" method="_dq7L69NCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dqKW49NCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dqK98NNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqMMENNCEem2FpOoiMKSDA" name="randomDim" method="_dq7y8NNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dqMMEdNCEem2FpOoiMKSDA" name="maxDim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dqMzINNCEem2FpOoiMKSDA" type="_dqCbE9NCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqNaM9NCEem2FpOoiMKSDA" name="randomBounds" method="_dq7y89NCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dqOBQNNCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dqOBQdNCEem2FpOoiMKSDA" name="maxDim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dqOBQtNCEem2FpOoiMKSDA" type="_dolCgdNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqP2cNNCEem2FpOoiMKSDA" name="randomChoice" method="_dq7y-dNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dqP2cdNCEem2FpOoiMKSDA" name="x" type="_dpyjcdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dqP2ctNCEem2FpOoiMKSDA" name="y" type="_dpyjcdNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dqP2c9NCEem2FpOoiMKSDA" name="probX">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqP2dNNCEem2FpOoiMKSDA" type="_dpyjcdNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dhTV0NNCEem2FpOoiMKSDA" name="SineMaker">
              <ownedComment xmi:id="_drDHttNCEem2FpOoiMKSDA">
                <body>A utility class that can be used to create smoothly varying sinusoidal&#xD;
numerical data.&#xD;
Note that this is not a singleton class nor does it have static methods as&#xD;
its behavior depends on the minimum, maximum and delta values given to &#xD;
its constructor.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dqpfENNCEem2FpOoiMKSDA" name="_mid" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dqpfEtNCEem2FpOoiMKSDA" name="_ampl" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dqqGIdNCEem2FpOoiMKSDA" name="_delta" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dqqtMNNCEem2FpOoiMKSDA" name="_theta" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqqtMdNCEem2FpOoiMKSDA" value="-Math.PI / 2.0"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dpNUoNNCEem2FpOoiMKSDA" client="_dhTV0NNCEem2FpOoiMKSDA" supplier="_dhHvoNNCEem2FpOoiMKSDA" contract="_dhHvoNNCEem2FpOoiMKSDA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq8aANNCEem2FpOoiMKSDA" name="SineMaker" specification="_dhT84NNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq8aAdNCEem2FpOoiMKSDA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq8aAtNCEem2FpOoiMKSDA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq8aA9NCEem2FpOoiMKSDA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq8aBNNCEem2FpOoiMKSDA" type="_dhTV0NNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>_mid = (max + min) / 2.0;&#xD;
		_ampl = (max - min) / 2.0;&#xD;
		_delta = delta;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9BENNCEem2FpOoiMKSDA" name="getDblVal" specification="_dhUj9tNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq9BEdNCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>double result = _mid + _ampl * Math.sin(_theta);&#xD;
		_theta += _delta; // shorthand for _theta = _theta + _delta&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9BEtNCEem2FpOoiMKSDA" name="getIntVal" specification="_dhVyENNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq9BE9NCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return (int) Math.round(getDblVal());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dhT84NNCEem2FpOoiMKSDA" name="SineMaker" method="_dq8aANNCEem2FpOoiMKSDA">
                <eAnnotations xmi:id="_dhUj89NCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dhUj9NNCEem2FpOoiMKSDA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_drDHt9NCEem2FpOoiMKSDA">
                  <body>The constructor takes several values to control the object's behavior.&#xD;
	 * @param min The minimum and initial value to produce.&#xD;
	 * @param max The maximum value to produce.&#xD;
	 * @param delta The amount in radians that the generating angle is incremented each time&#xD;
	 *</body>
                </ownedComment>
                <ownedParameter xmi:id="_dhUj8NNCEem2FpOoiMKSDA" name="min">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dhUj8dNCEem2FpOoiMKSDA" name="max">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dhUj8tNCEem2FpOoiMKSDA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dhUj9dNCEem2FpOoiMKSDA" type="_dhTV0NNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dhUj9tNCEem2FpOoiMKSDA" name="getDblVal" method="_dq9BENNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dhVLANNCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dhVyENNCEem2FpOoiMKSDA" name="getIntVal" method="_dq9BEtNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dhVyEdNCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_drS_U9NCEem2FpOoiMKSDA" name="" memberEnd="_drS_VNNCEem2FpOoiMKSDA _dqo4ANNCEem2FpOoiMKSDA">
              <ownedEnd xmi:id="_drS_VNNCEem2FpOoiMKSDA" name="" type="_dhJk0NNCEem2FpOoiMKSDA" association="_drS_U9NCEem2FpOoiMKSDA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dg_z0NNCEem2FpOoiMKSDA" name="IRandomizer">
            <ownedComment xmi:id="_drCgpNNCEem2FpOoiMKSDA">
              <body>Top-level abstraction of a utility to generate various random values.   &#xD;
&#xD;
To maximally decouple an application from the randomizer's implementation any variable representing a randomizer&#xD;
should be typed to this interface, not to any concrete implementation.  For example:&#xD;
IRandomizer myRandomizer = Randomizer.Singleton; &#xD;
 &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_dhBpANNCEem2FpOoiMKSDA" name="randomInt">
              <ownedComment xmi:id="_drCgp9NCEem2FpOoiMKSDA">
                <body>Returns a random integer greater than or equal to min and less than or equal to max.&#xD;
	 * @param min The minimum allowed value&#xD;
	 * @param max The maximum allowed value&#xD;
	 * @return an int subject to the given bounds</body>
              </ownedComment>
              <ownedParameter xmi:id="_dhBpAdNCEem2FpOoiMKSDA" name="min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_dhBpAtNCEem2FpOoiMKSDA" name="max">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_dhBpA9NCEem2FpOoiMKSDA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_dhCQENNCEem2FpOoiMKSDA" name="randomDouble">
              <ownedComment xmi:id="_drCgqNNCEem2FpOoiMKSDA">
                <body>Returns a random double greater than or equal to min and less than max.&#xD;
	 * @param min The minimum allowed value&#xD;
	 * @param max The maximum allowed value&#xD;
	 * @return a double subject to the given bounds</body>
              </ownedComment>
              <ownedParameter xmi:id="_dhCQEdNCEem2FpOoiMKSDA" name="min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_dhCQEtNCEem2FpOoiMKSDA" name="max">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_dhCQE9NCEem2FpOoiMKSDA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_dhDeMNNCEem2FpOoiMKSDA" name="randomColor">
              <ownedComment xmi:id="_drDHstNCEem2FpOoiMKSDA">
                <body>Generates a random color&#xD;
	 * @return a random Color object</body>
              </ownedComment>
              <ownedParameter xmi:id="_dqFeYNNCEem2FpOoiMKSDA" type="_dooF0NNCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_dqCbENNCEem2FpOoiMKSDA" name="randomLoc">
              <ownedComment xmi:id="_drCgpdNCEem2FpOoiMKSDA">
                <body>Generates a random location point subject to the constraint that rect.x&amp;lt;=X&amp;lt;=rect.x+rect.width and rect.y&amp;lt;=Y&amp;lt;=rect.y+rect.height.   &#xD;
	 * Note that the definition of a Rectangle object requires that (x,y) be defined as the upper left corner and that width and height must both &#xD;
	 * be non-negative.&#xD;
	 * @param rect The bounds for the x and y values of the created Point&#xD;
	 * @return A Point object whose x and y are subject to the given bounds</body>
              </ownedComment>
              <ownedParameter xmi:id="_dqCbEdNCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dqCbEtNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_dqDpMdNCEem2FpOoiMKSDA" name="randomLoc">
              <ownedComment xmi:id="_drCgptNCEem2FpOoiMKSDA">
                <body>Generates a random location point subject to the constraint that 0&amp;lt;=X&amp;lt;=dim.width and 0&amp;lt;=Y&amp;lt;=dim.height.&#xD;
	 * @param dim The bounds for the x and y values of the created Point&#xD;
	 * @return A Point object whose x and y are subject to the given bounds</body>
              </ownedComment>
              <ownedParameter xmi:id="_dqDpMtNCEem2FpOoiMKSDA" name="dim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dqDpM9NCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_dqDpNNNCEem2FpOoiMKSDA" name="randomVel">
              <ownedComment xmi:id="_drCgqdNCEem2FpOoiMKSDA">
                <body>Returns a random velocity (as a Point) subject to the constraint that the absolute value of the velocity (speed) &#xD;
	 * within the bound (inclusive) defined by rect.   Thus the resultant velocity may be negative.   The given Rectangle&#xD;
	 * should use all positive values.   To create velocities or any Point with asymmetrical bounds, use the randomLoc(Rectangle rect) &#xD;
	 * method with the input rectangle set to the desired bounds.&#xD;
	 * @param rect The bounds for the absolute value of the velocity in the x and y directions.  &#xD;
	 * @return a Point object with x and y subject to the given bounds.</body>
              </ownedComment>
              <ownedParameter xmi:id="_dqDpNdNCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dqEQQNNCEem2FpOoiMKSDA" type="_dokbcdNCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_dqEQQdNCEem2FpOoiMKSDA" name="randomDim">
              <ownedComment xmi:id="_drDHsNNCEem2FpOoiMKSDA">
                <body>Returns a random square Dimension, whose width is maxDim.width/2&amp;lt;=width&amp;lt;=maxDim.width&#xD;
	 * @param maxDim  The bounds on the side of the created Dimension.&#xD;
	 * @return A random square Dimension subject to the given bound</body>
              </ownedComment>
              <ownedParameter xmi:id="_dqEQQtNCEem2FpOoiMKSDA" name="maxDim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dqEQQ9NCEem2FpOoiMKSDA" type="_dqCbE9NCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_dqE3UNNCEem2FpOoiMKSDA" name="randomBounds">
              <ownedComment xmi:id="_drDHsdNCEem2FpOoiMKSDA">
                <body>Generates a randomly located and sized rectangle&#xD;
	 * @param rect  The bounds for the location of the created rectangle&#xD;
	 * @param maxDim  The bounds for the dimensions of the create rectangle&#xD;
	 * @return A Rectangle with location and dimensions subject to the given bounds.</body>
              </ownedComment>
              <ownedParameter xmi:id="_dqE3UdNCEem2FpOoiMKSDA" name="rect" type="_dolCgdNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dqE3UtNCEem2FpOoiMKSDA" name="maxDim" type="_dqCbE9NCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dqE3U9NCEem2FpOoiMKSDA" type="_dolCgdNCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_dqFeYdNCEem2FpOoiMKSDA" name="randomChoice">
              <ownedComment xmi:id="_drDHs9NCEem2FpOoiMKSDA">
                <body>Returns a random choice of one of two objects, x and y, where probX is the probability &#xD;
	 * that x will be picked (0&amp;lt;=x&amp;lt;=1).&#xD;
	 * @param x The first of two choices&#xD;
	 * @param y The second of two choices&#xD;
	 * @param probX  The probability of the first choice&#xD;
	 * @return Either x or y as per the probability of choosing them.</body>
              </ownedComment>
              <ownedParameter xmi:id="_dqFeYtNCEem2FpOoiMKSDA" name="x" type="_dpyjcdNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dqFeY9NCEem2FpOoiMKSDA" name="y" type="_dpyjcdNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dqFeZNNCEem2FpOoiMKSDA" name="probX">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_dqFeZdNCEem2FpOoiMKSDA" type="_dpyjcdNCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dhHvoNNCEem2FpOoiMKSDA" name="ISineMaker">
            <ownedComment xmi:id="_drDHtNNCEem2FpOoiMKSDA">
              <body>Top-level abstraction of the generation of sinusoidally varying numerical values.  The range of values &#xD;
produced and the step between subsequent values are determined by the concrete implementation &#xD;
of the interface.&#xD;
&#xD;
To maximally decouple an application from the sine maker's implementation any variable representing a sine maker&#xD;
should be typed to this interface, not to any concrete implementation.  For example:&#xD;
ISineMaker mySineMaker = new SineMaker()&#xD;
 &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_dhIWsNNCEem2FpOoiMKSDA" name="dblVal" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_dhI9wNNCEem2FpOoiMKSDA" name="intVal" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_deWIc9NCEem2FpOoiMKSDA" name="loader">
          <packagedElement xmi:type="uml:Package" xmi:id="_deWvgNNCEem2FpOoiMKSDA" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_dg4fENNCEem2FpOoiMKSDA" name="ObjectLoader">
              <ownedComment xmi:id="_drB5m9NCEem2FpOoiMKSDA">
                <body>Factory that dynamically class loads and instantiates an object of type ReturnT&#xD;
@author Stephen Wong&#xD;
 *&#xD;
@param &lt;ReturnT>  The type of object to be created.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dqkmkNNCEem2FpOoiMKSDA" name="primitiveTypes" visibility="private" type="_dp0_sNNCEem2FpOoiMKSDA" association="_drSYQdNCEem2FpOoiMKSDA">
                <qualifier xmi:id="_dqmbwNNCEem2FpOoiMKSDA" type="_dql0stNCEem2FpOoiMKSDA"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dql0sNNCEem2FpOoiMKSDA" value="new HashMap&lt;Class&lt;?>, Class&lt;?>>() {&#xD;&#xA;&#x9;&#x9;private static final long serialVersionUID = 582688125217694628L;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;// Manually load the map with the primitive types and their wrapper classes&#xD;&#xA;&#x9;&#x9;&#x9;Class&lt;?>[][] type2Types = new Class&lt;?>[][] { { Boolean.TYPE, Boolean.class },&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ Character.TYPE, Character.class }, { Byte.TYPE, Byte.class }, { Short.TYPE, Short.class },&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ Integer.TYPE, Integer.class }, { Long.TYPE, Long.class }, { Float.TYPE, Float.class },&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{ Double.TYPE, Double.class }, { Void.TYPE, Void.class } };&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;for (Class&lt;?>[] typePair : type2Types) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;put(typePair[0], typePair[1]);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dqnp4NNCEem2FpOoiMKSDA" name="errorFac" visibility="private" type="_dpF_4dNCEem2FpOoiMKSDA" association="_drS_UNNCEem2FpOoiMKSDA"/>
              <interfaceRealization xmi:id="_dpF_49NCEem2FpOoiMKSDA" client="_dg4fENNCEem2FpOoiMKSDA" supplier="_dg2C0dNCEem2FpOoiMKSDA" contract="_dg2C0dNCEem2FpOoiMKSDA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq5WsNNCEem2FpOoiMKSDA" name="ObjectLoader" specification="_dp2N0NNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq5WsdNCEem2FpOoiMKSDA" name="errorFac" type="_dpF_4dNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq5WstNCEem2FpOoiMKSDA" type="_dg4fENNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>this.errorFac = errorFac;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq59wNNCEem2FpOoiMKSDA" name="loadInstance" specification="_dp4qEdNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq59wdNCEem2FpOoiMKSDA" name="className">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq59wtNCEem2FpOoiMKSDA" name="args" type="_dpyjcdNCEem2FpOoiMKSDA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dq59w9NCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq59xNNCEem2FpOoiMKSDA" type="_dp4DANNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>try {&#xD;
			return (ReturnT) getConstructor(Class.forName(className), args).newInstance(args);&#xD;
&#xD;
		} catch (Exception ex) {&#xD;
			System.err.println(&quot;ObjectLoader.loadInstance(&quot; + className + &quot;, &quot;&#xD;
					+ (new ArrayList&lt;Object>(Arrays.asList(args))) + &quot;):\n   Exception = &quot; + ex);&#xD;
			return errorFac.apply(args); // Make the error object&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq59xdNCEem2FpOoiMKSDA" name="getConstructor" specification="_dp9ikNNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq59xtNCEem2FpOoiMKSDA" name="aClass" type="_dp0_sNNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dq59x9NCEem2FpOoiMKSDA" name="args" type="_dpyjcdNCEem2FpOoiMKSDA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dq59yNNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq59ydNCEem2FpOoiMKSDA" type="_dp7GUNNCEem2FpOoiMKSDA" direction="return"/>
                <language>java</language>
                <body>// Get all the constructors of the given class&#xD;
		Constructor&lt;?> cs[] = aClass.getConstructors();&#xD;
&#xD;
		// search the constructors for the first one whose types allow the given input values.&#xD;
		for (int i = 0; i &lt; cs.length; i++) {&#xD;
			if (checkTypes(cs[i].getParameterTypes(), args)) {&#xD;
				return cs[i]; // Found one! Return the constructor.   note that there might be more that would fit, perhaps better than this one.&#xD;
			}&#xD;
		}&#xD;
		throw new IllegalArgumentException(&#xD;
				&quot;No constructor found that matches the arguments of the given input parameters.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq59ytNCEem2FpOoiMKSDA" name="checkTypes" specification="_dqAl4NNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dq59y9NCEem2FpOoiMKSDA" name="paramTypes" type="_dp0_sNNCEem2FpOoiMKSDA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dq59zNNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq59zdNCEem2FpOoiMKSDA" name="args" type="_dpyjcdNCEem2FpOoiMKSDA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dq59ztNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq59z9NCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (args.length == paramTypes.length) {&#xD;
			for (int idx = 0; idx &lt; args.length; idx++) {&#xD;
				// Special case if the input parameter is a primitive.&#xD;
				// e.g.  Integer.TYPE is the type of int and even though int x = new Integer(42) is ok,&#xD;
				// Integer.TYPE.isAssignableFrom(Integer.class) will return false!!!&#xD;
				if (paramTypes[idx].isPrimitive()) {&#xD;
					// Substitute the boxing class of the primitive type, e.g. Integer for int&#xD;
					paramTypes[idx] = primitiveTypes.get(paramTypes[idx]);&#xD;
				}&#xD;
				// check if input parameter is an allowable subclass of the formal constructor parameter type.&#xD;
				if (!paramTypes[idx].isAssignableFrom(args[idx].getClass())) {&#xD;
					return false; // Types don't match&#xD;
				}&#xD;
			}&#xD;
			return true; // types match!&#xD;
		} else {&#xD;
			return false; // wrong number of input parameters&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dp2N0NNCEem2FpOoiMKSDA" name="ObjectLoader" method="_dq5WsNNCEem2FpOoiMKSDA">
                <eAnnotations xmi:id="_dp204dNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dp204tNCEem2FpOoiMKSDA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_drCgoNNCEem2FpOoiMKSDA">
                  <body>Constructor for the class.   The given errorFac is used to generate instances when the loadInstance() method&#xD;
	 * is otherwise unable to do so because of a processing error.&#xD;
	 * @param errorFac A factory method that takes the same array of input parameters that loadInstance() &#xD;
	 * takes and returns an instance of ReturnT.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dp204NNCEem2FpOoiMKSDA" name="errorFac" type="_dpF_4dNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dp2049NCEem2FpOoiMKSDA" type="_dg4fENNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dp4qEdNCEem2FpOoiMKSDA" name="loadInstance" method="_dq59wNNCEem2FpOoiMKSDA">
                <ownedParameter xmi:id="_dp4qEtNCEem2FpOoiMKSDA" name="className">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dp5RINNCEem2FpOoiMKSDA" name="args" type="_dpyjcdNCEem2FpOoiMKSDA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dp54MNNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dp5RIdNCEem2FpOoiMKSDA" type="_dp4DANNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dp9ikNNCEem2FpOoiMKSDA" name="getConstructor" visibility="private" method="_dq59xdNCEem2FpOoiMKSDA" raisedException="_dp8UcdNCEem2FpOoiMKSDA">
                <ownedComment xmi:id="_drCgotNCEem2FpOoiMKSDA">
                  <body>Proper form of Class.getConstructor(Class&amp;lt;?&amp;gt;[] parameterTypes) that&#xD;
	 * returns a constructor that will return a constructor of the given class&#xD;
	 * that will accept the given argument list.  Correctly finds a constructor&#xD;
	 * even if the constructor types are superclasses of the given arguments except &#xD;
	 * that it will not necessarily choose the more narrowed choice if more than one &#xD;
	 * possibility exists. &#xD;
	 * &#xD;
	 * @param aClass&#xD;
	 *            A class object whose constructor is being searched for.&#xD;
	 * @param args&#xD;
	 *            a list of input values for the constructor&#xD;
	 * @return a Constructor&amp;lt;?&amp;gt; that will work with the given set of input&#xD;
	 *         parameter values.&#xD;
	 * @throws IllegalArgumentException&#xD;
	 *             when no constructor can be found that would accept the given&#xD;
	 *             parameters.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dp9ikdNCEem2FpOoiMKSDA" name="aClass" type="_dp0_sNNCEem2FpOoiMKSDA"/>
                <ownedParameter xmi:id="_dp9iktNCEem2FpOoiMKSDA" name="args" type="_dpyjcdNCEem2FpOoiMKSDA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dp_XwdNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dp-JodNCEem2FpOoiMKSDA" type="_dp7GUNNCEem2FpOoiMKSDA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqAl4NNCEem2FpOoiMKSDA" name="checkTypes" visibility="private" method="_dq59ytNCEem2FpOoiMKSDA">
                <ownedComment xmi:id="_drCgo9NCEem2FpOoiMKSDA">
                  <body>Utility method to check if the types of the elements in the given args&#xD;
	 * array match the types in the given paramTypes array. That is, if a method&#xD;
	 * takes input parameters of types paramTypes, would args be an allowable&#xD;
	 * input?&#xD;
	 * &#xD;
	 * @param paramTypes&#xD;
	 *            An array of Class objects representing an ordered list of&#xD;
	 *            types&#xD;
	 * @param args&#xD;
	 *            An array of input parameter values, whose types are being&#xD;
	 *            checked against paramTypes.&#xD;
	 * @return true if all arg elements are subclasses (assignable to) their&#xD;
	 *         corresponding paramTypes elements. Returns false otherwise.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqAl4dNCEem2FpOoiMKSDA" name="paramTypes" type="_dp0_sNNCEem2FpOoiMKSDA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dqAl5NNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqAl4tNCEem2FpOoiMKSDA" name="args" type="_dpyjcdNCEem2FpOoiMKSDA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dqBM8dNCEem2FpOoiMKSDA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqAl49NCEem2FpOoiMKSDA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dp4DANNCEem2FpOoiMKSDA" name="ReturnT"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dql0stNCEem2FpOoiMKSDA" name="Class"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_drSYQdNCEem2FpOoiMKSDA" name="" memberEnd="_drSYQtNCEem2FpOoiMKSDA _dqkmkNNCEem2FpOoiMKSDA">
              <ownedEnd xmi:id="_drSYQtNCEem2FpOoiMKSDA" name="" type="_dg4fENNCEem2FpOoiMKSDA" association="_drSYQdNCEem2FpOoiMKSDA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_drS_UNNCEem2FpOoiMKSDA" name="" memberEnd="_drS_UdNCEem2FpOoiMKSDA _dqnp4NNCEem2FpOoiMKSDA">
              <ownedEnd xmi:id="_drS_UdNCEem2FpOoiMKSDA" name="" type="_dg4fENNCEem2FpOoiMKSDA" association="_drS_UNNCEem2FpOoiMKSDA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dg2C0dNCEem2FpOoiMKSDA" name="IObjectLoader">
            <ownedComment xmi:id="_drB5mtNCEem2FpOoiMKSDA">
              <body>Abstraction of the dynamic class loading process for a particular type of &#xD;
entity (class or interface).  &#xD;
&#xD;
To maximally decouple the application from the implementation of the object loader, &#xD;
the object loader object should be typed to to this interface, e.g.&#xD;
IObjectLoader&amp;lt;IMyDesiredType&amp;gt; objLoader = new SomeConcreteObjectLoaderImplementation&amp;lt;IMyDesiredType&amp;gt;().   &#xD;
&#xD;
@author swong&#xD;
 *&#xD;
@param &lt;ReturnT>  The type of objects being instantiated.</body>
            </ownedComment>
            <ownedOperation xmi:id="_dpzxkNNCEem2FpOoiMKSDA" name="loadInstance">
              <ownedParameter xmi:id="_dpzxkdNCEem2FpOoiMKSDA" name="className">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_dpzxktNCEem2FpOoiMKSDA" name="args" type="_dpyjcdNCEem2FpOoiMKSDA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dp0YodNCEem2FpOoiMKSDA" value="*"/>
              </ownedParameter>
              <ownedParameter xmi:id="_dpzxk9NCEem2FpOoiMKSDA" type="_dpxVUNNCEem2FpOoiMKSDA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_dpxVUNNCEem2FpOoiMKSDA" name="ReturnT"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_de47ANNCEem2FpOoiMKSDA" name="displayModel">
          <packagedElement xmi:type="uml:Interface" xmi:id="_dgwjQNNCEem2FpOoiMKSDA" name="IATImage">
            <ownedComment xmi:id="_drB5mNNCEem2FpOoiMKSDA">
              <body>An interface that represents an affine transform drawable image object.&#xD;
This interface is designed to hide the UI-dependent parts of various processes&#xD;
such as getting the width and height of the image and drawing the image onto a&#xD;
Graphics object by wrapping an Image object with Component that is used to control it.   &#xD;
This enables the user of an IATImage object to be more decoupled from&#xD;
the view than would be possible if Image objects were used directly.&#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <generalization xmi:id="_dpC8kdNCEem2FpOoiMKSDA" general="_dg00sNNCEem2FpOoiMKSDA"/>
            <ownedAttribute xmi:id="_dgxxYNNCEem2FpOoiMKSDA" name="FACTORY" isStatic="true" type="_dpCVgdNCEem2FpOoiMKSDA" association="_drMRodNCEem2FpOoiMKSDA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_dgy_gNNCEem2FpOoiMKSDA" value="(image, imageObs) -> {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// First, make sure that the image is fully loaded.&#xD;&#xA;&#x9;&#x9;MediaTracker mt = new MediaTracker(imageObs);&#xD;&#xA;&#x9;&#x9;mt.addImage(image, 1);&#xD;&#xA;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;mt.waitForAll();&#xD;&#xA;&#x9;&#x9;} catch (Exception e) {&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;[IATImage.FACTORY] Exception while waiting for image.  Exception = &quot; + e);&#xD;&#xA;&#x9;&#x9;&#x9;return IATImage.ERROR;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// Return an IATImage object that knows both the original image and its associated ImageObserver. &#xD;&#xA;&#x9;&#x9;return new IATImage() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public int getWidth() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return image.getWidth(imageObs);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public int getHeight() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return image.getHeight(imageObs);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void draw(Graphics g, AffineTransform at) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;((Graphics2D) g).drawImage(image, at, imageObs);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;};&#xD;&#xA;&#x9;}"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_dgy_gtNCEem2FpOoiMKSDA" name="ERROR" isLeaf="true" isStatic="true" type="_dgwjQNNCEem2FpOoiMKSDA" isReadOnly="true" association="_drM4sdNCEem2FpOoiMKSDA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_dgzmkNNCEem2FpOoiMKSDA" value="new IATImage() {&#xD;&#xA;&#x9;&#x9;int size = 100;&#xD;&#xA;&#x9;&#x9;Color color = Color.BLACK;&#xD;&#xA;&#x9;&#x9;Shape shape = new Rectangle(0, 0, size, size);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public int getWidth() {&#xD;&#xA;&#x9;&#x9;&#x9;return size;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public int getHeight() {&#xD;&#xA;&#x9;&#x9;&#x9;return size;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void draw(Graphics g, AffineTransform at) {&#xD;&#xA;&#x9;&#x9;&#x9;g.setColor(color);&#xD;&#xA;&#x9;&#x9;&#x9;((Graphics2D) g).fill(at.createTransformedShape(shape));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_dpwuQNNCEem2FpOoiMKSDA" name="draw">
              <ownedParameter xmi:id="_dpwuQdNCEem2FpOoiMKSDA" name="g" type="_doj0YNNCEem2FpOoiMKSDA"/>
              <ownedParameter xmi:id="_dpwuQtNCEem2FpOoiMKSDA" name="at" type="_dpBuctNCEem2FpOoiMKSDA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dg00sNNCEem2FpOoiMKSDA" name="IDimension">
            <ownedComment xmi:id="_drB5mdNCEem2FpOoiMKSDA">
              <body>Abstract representation of an entity with an integer width and height.&#xD;
This interface is useful for representing components the model needs that &#xD;
have a width and height, such as a drawing canvas but without exposing the &#xD;
model to the full GUI-specific objects such as JPanels.   Also, unlike &#xD;
java.awt.Dimension, this interface is able to represent a dynamically changing&#xD;
width and height, not just a static value.&#xD;
&lt;br>&lt;br>&#xD;
Typical usage: Have the controller wrap a GUI element from the view with an &#xD;
instance of this interface that is then given to the model to use.&#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_dg1bwNNCEem2FpOoiMKSDA" name="width" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_dg2C0NNCEem2FpOoiMKSDA" name="height" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_drMRodNCEem2FpOoiMKSDA" name="" memberEnd="_drMRotNCEem2FpOoiMKSDA _dgxxYNNCEem2FpOoiMKSDA">
            <ownedEnd xmi:id="_drMRotNCEem2FpOoiMKSDA" name="" type="_dgwjQNNCEem2FpOoiMKSDA" association="_drMRodNCEem2FpOoiMKSDA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_drM4sdNCEem2FpOoiMKSDA" name="" memberEnd="_drM4stNCEem2FpOoiMKSDA _dgy_gtNCEem2FpOoiMKSDA">
            <ownedEnd xmi:id="_drM4stNCEem2FpOoiMKSDA" name="" type="_dgwjQNNCEem2FpOoiMKSDA" association="_drM4sdNCEem2FpOoiMKSDA"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_deaZ4NNCEem2FpOoiMKSDA" name="ballModel">
      <packagedElement xmi:type="uml:Class" xmi:id="_dgCxkNNCEem2FpOoiMKSDA" name="Model">
        <ownedComment xmi:id="_drAEYNNCEem2FpOoiMKSDA">
          <body>Creates a model to manage balls and communicate with &#xD;
the view&#xD;
&#xD;
@author BJ Kim and William Su&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_dqa1kNNCEem2FpOoiMKSDA" name="model2ViewAdpt" visibility="private" type="_dgNwsNNCEem2FpOoiMKSDA" association="_drOG0dNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqbcoNNCEem2FpOoiMKSDA" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqbcotNCEem2FpOoiMKSDA" name="classNames" visibility="package" isOrdered="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dqcDsNNCEem2FpOoiMKSDA" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqcDsdNCEem2FpOoiMKSDA" value="Arrays.asList(&quot;Straight&quot;, &quot;VelChange&quot;, &quot;Trippy&quot;, &quot;ColorBreathing&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqcDs9NCEem2FpOoiMKSDA" name="myDispatcher" visibility="private" type="_dgbzINNCEem2FpOoiMKSDA" association="_drOG1NNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqd44NNCEem2FpOoiMKSDA" value="new SequentialDispatcher&lt;Graphics>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqd44tNCEem2FpOoiMKSDA" name="timeSlice" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqef8NNCEem2FpOoiMKSDA" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqef8tNCEem2FpOoiMKSDA" name="timer" visibility="private" type="_dom3sdNCEem2FpOoiMKSDA" association="_drOt4dNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqfHANNCEem2FpOoiMKSDA" value="new Timer(timeSlice, (e) -> {&#xD;&#xA;&#x9;&#x9;model2ViewAdpt.update();&#xD;&#xA;&#x9;})"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dqzQENNCEem2FpOoiMKSDA" name="update" specification="_dpiEwNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dqzQEdNCEem2FpOoiMKSDA" name="g" type="_doj0YNNCEem2FpOoiMKSDA"/>
          <language>java</language>
          <body>myDispatcher.updateAll(g);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dqz3INNCEem2FpOoiMKSDA" name="clearAll" specification="_dgEmwNNCEem2FpOoiMKSDA">
          <language>java</language>
          <body>myDispatcher.removeAllObservers();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dqz3IdNCEem2FpOoiMKSDA" name="addBall" specification="_dpir0NNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dqz3ItNCEem2FpOoiMKSDA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dqz3I9NCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
          <language>java</language>
          <body>/**&#xD;
		 * Creates an objectloader, where if there are problems with loading, &#xD;
		 * an ErrorBall is created.&#xD;
		 */&#xD;
		IObjectLoader&lt;IObserver&lt;Graphics>> loader = new ObjectLoader&lt;IObserver&lt;Graphics>>(&#xD;
				args -> new ErrorBall(0, new Point(0, 0), new Point(0, 0), Color.BLACK, frame));&#xD;
&#xD;
		IRandomizer rand = Randomizer.Singleton;&#xD;
&#xD;
		// assigns the radius&#xD;
		int radius = rand.randomInt(10, 80);&#xD;
&#xD;
		// If Random is selected, choose one of the ball types randomly&#xD;
		if (className.equals(&quot;Random&quot;)) {&#xD;
&#xD;
			className = classNames.get(rand.randomInt(0, 3));&#xD;
&#xD;
			// if className is invalid, load an ErrorBall&#xD;
		} else if (!classNames.contains(className)) {&#xD;
			className = &quot;Error&quot;;&#xD;
		}&#xD;
&#xD;
		// load the ball based on the className selected from the GUI&#xD;
		IObserver&lt;Graphics> ball = loader.loadInstance(&quot;balls.&quot; + className + &quot;Ball&quot;, radius,&#xD;
				new Point(rand.randomInt(radius, frame.getWidth() - radius),&#xD;
						rand.randomInt(radius, frame.getHeight() - radius)),&#xD;
				rand.randomVel(new Rectangle(25, 25)), rand.randomColor(), frame);&#xD;
&#xD;
		// Add the observer to the dispatcher to be drawn&#xD;
		myDispatcher.addObserver(ball);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq0eMNNCEem2FpOoiMKSDA" name="Model" specification="_dopT8NNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq0eMdNCEem2FpOoiMKSDA" name="model2ViewAdapter" type="_dgNwsNNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq0eMtNCEem2FpOoiMKSDA" type="_dgCxkNNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>model2ViewAdpt = model2ViewAdapter;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq0eM9NCEem2FpOoiMKSDA" name="start" specification="_dgF04NNCEem2FpOoiMKSDA">
          <language>java</language>
          <body>timer.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dgEmwNNCEem2FpOoiMKSDA" name="clearAll" method="_dqz3INNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drAEYtNCEem2FpOoiMKSDA">
            <body>Clears all ball objects from the dispatcher</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dgF04NNCEem2FpOoiMKSDA" name="start" method="_dq0eM9NCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drAEZdNCEem2FpOoiMKSDA">
            <body>Starts the timer</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dopT8NNCEem2FpOoiMKSDA" name="Model" method="_dq0eMNNCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dop7AdNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dop7AtNCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_drAEZNNCEem2FpOoiMKSDA">
            <body>Constructor for Model&#xD;
	 * &#xD;
	 * @param model2ViewAdapter The model-to-view adapter for MVC control</body>
          </ownedComment>
          <ownedParameter xmi:id="_dop7ANNCEem2FpOoiMKSDA" name="model2ViewAdapter" type="_dgNwsNNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dop7A9NCEem2FpOoiMKSDA" type="_dgCxkNNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dpiEwNNCEem2FpOoiMKSDA" name="update" method="_dqzQENNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drAEYdNCEem2FpOoiMKSDA">
            <body>Create Parallel Dispatcher to manage balls</body>
          </ownedComment>
          <ownedParameter xmi:id="_dpiEwdNCEem2FpOoiMKSDA" name="g" type="_doj0YNNCEem2FpOoiMKSDA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dpir0NNCEem2FpOoiMKSDA" name="addBall" method="_dqz3IdNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drAEY9NCEem2FpOoiMKSDA">
            <body>Adds a ball of type className to the dispatcher to&#xD;
	 * then be drawn on the frame&#xD;
	 * &#xD;
	 * @param className The name of the ball class selected&#xD;
	 * @param frame The frame to draw the new ball on</body>
          </ownedComment>
          <ownedParameter xmi:id="_dpir0dNCEem2FpOoiMKSDA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dpir0tNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drOG0dNCEem2FpOoiMKSDA" name="" memberEnd="_drOG0tNCEem2FpOoiMKSDA _dqa1kNNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drOG0tNCEem2FpOoiMKSDA" name="" type="_dgCxkNNCEem2FpOoiMKSDA" association="_drOG0dNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drOG1NNCEem2FpOoiMKSDA" name="" memberEnd="_drOG1dNCEem2FpOoiMKSDA _dqcDs9NCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drOG1dNCEem2FpOoiMKSDA" name="" type="_dgCxkNNCEem2FpOoiMKSDA" association="_drOG1NNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drOt4dNCEem2FpOoiMKSDA" name="" memberEnd="_drOt4tNCEem2FpOoiMKSDA _dqef8tNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drOt4tNCEem2FpOoiMKSDA" name="" type="_dgCxkNNCEem2FpOoiMKSDA" association="_drOt4dNCEem2FpOoiMKSDA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_deqRgNNCEem2FpOoiMKSDA" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_dhXnQNNCEem2FpOoiMKSDA" name="IView2ModelAdapter">
        <ownedComment xmi:id="_drDHuNNCEem2FpOoiMKSDA">
          <body>View-to-model adapter to communicate with the model without &#xD;
knowing about it&#xD;
&#xD;
@author BJ Kim and William Su</body>
        </ownedComment>
        <ownedAttribute xmi:id="_dhY1YdNCEem2FpOoiMKSDA" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_dhXnQNNCEem2FpOoiMKSDA" isReadOnly="true" association="_drNfwdNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dhZccNNCEem2FpOoiMKSDA" value="new IView2ModelAdapter() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;public void update(Graphics g) {&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;public void addBall(String className, Component frame) {&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;public void clearAll() {&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_dhY1YNNCEem2FpOoiMKSDA" name="clearAll">
          <ownedComment xmi:id="_drDHu9NCEem2FpOoiMKSDA">
            <body>Clears all balls from the dispatcher, to be implemented</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dqQdgNNCEem2FpOoiMKSDA" name="update">
          <ownedComment xmi:id="_drDHudNCEem2FpOoiMKSDA">
            <body>Updates the frame, to be implemented&#xD;
	 * &#xD;
	 * @param g Graphics of the frame</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqQdgdNCEem2FpOoiMKSDA" name="g" type="_doj0YNNCEem2FpOoiMKSDA"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dqREkNNCEem2FpOoiMKSDA" name="addBall">
          <ownedComment xmi:id="_drDHutNCEem2FpOoiMKSDA">
            <body>Adds ball to the dispatcher, to be implemented&#xD;
	 * &#xD;
	 * @param className String of desired ball type&#xD;
	 * @param frame Frame of the GUI</body>
          </ownedComment>
          <ownedParameter xmi:id="_dqREkdNCEem2FpOoiMKSDA" name="className">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dqREktNCEem2FpOoiMKSDA" name="frame" type="_dooF0tNCEem2FpOoiMKSDA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dhaqkNNCEem2FpOoiMKSDA" name="MyFrame">
        <ownedComment xmi:id="_drDuwNNCEem2FpOoiMKSDA">
          <body>GUI display of different types of balls bouncing on the screen.&#xD;
&#xD;
@author BJ Kim and William Su</body>
        </ownedComment>
        <generalization xmi:id="_dqSSsNNCEem2FpOoiMKSDA" general="_dpPw4NNCEem2FpOoiMKSDA"/>
        <ownedAttribute xmi:id="_dqrUQdNCEem2FpOoiMKSDA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqrUQtNCEem2FpOoiMKSDA" value="-3883274713763024864L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqrUQ9NCEem2FpOoiMKSDA" name="contentPane" visibility="private" type="_dpQX8dNCEem2FpOoiMKSDA" association="_drTmYdNCEem2FpOoiMKSDA"/>
        <ownedAttribute xmi:id="_dqr7UdNCEem2FpOoiMKSDA" name="model2ViewAdpt" visibility="package" type="_dgNwsNNCEem2FpOoiMKSDA" association="_drUNcdNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqr7UtNCEem2FpOoiMKSDA" value="IModel2ViewAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqr7VNNCEem2FpOoiMKSDA" name="view2ModelAdpt" visibility="private" type="_dhXnQNNCEem2FpOoiMKSDA" association="_drU0gdNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqsiYNNCEem2FpOoiMKSDA" value="IView2ModelAdapter.NULL_OBJECT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqsiYtNCEem2FpOoiMKSDA" name="centerPanel" visibility="private" isLeaf="true" type="_dpQX8dNCEem2FpOoiMKSDA" isReadOnly="true" association="_drU0hNNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqsiY9NCEem2FpOoiMKSDA" value="new JPanel() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * For serialization.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;private static final long serialVersionUID = -64671824251513701L;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Overridden paintComponent method to paint a shape in the panel.&#xD;&#xA;&#x9;&#x9; * @param g The Graphics object to paint on.&#xD;&#xA;&#x9;&#x9; **/&#xD;&#xA;&#x9;&#x9;public void paintComponent(Graphics g) {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;super.paintComponent(g); //Do everything normally done first, e.g. clear the screen.&#xD;&#xA;&#x9;&#x9;&#x9;view2ModelAdpt.update(g); //Update the view with using the adapter&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqtJcdNCEem2FpOoiMKSDA" name="northPanel" visibility="private" isLeaf="true" type="_dpQX8dNCEem2FpOoiMKSDA" isReadOnly="true" association="_drVbkdNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqtJctNCEem2FpOoiMKSDA" value="new JPanel()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dqtwgdNCEem2FpOoiMKSDA" name="makeBallButton" visibility="private" isLeaf="true" type="_dpQ_AtNCEem2FpOoiMKSDA" isReadOnly="true" association="_drWCodNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dquXkNNCEem2FpOoiMKSDA" value="new JButton(&quot;Make Ball&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dquXktNCEem2FpOoiMKSDA" name="clearAllButton" visibility="private" isLeaf="true" type="_dpQ_AtNCEem2FpOoiMKSDA" isReadOnly="true" association="_drWpsdNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dquXk9NCEem2FpOoiMKSDA" value="new JButton(&quot;Clear All!&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dquXldNCEem2FpOoiMKSDA" name="dropDown" visibility="private" isLeaf="true" type="_dpTbQdNCEem2FpOoiMKSDA" isReadOnly="true" association="_drXQwdNCEem2FpOoiMKSDA">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dqu-odNCEem2FpOoiMKSDA" value="new JComboBox&lt;String>()"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9BFNNCEem2FpOoiMKSDA" name="start" specification="_dhb4sNNCEem2FpOoiMKSDA">
          <language>java</language>
          <body>setVisible(true);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9BFdNCEem2FpOoiMKSDA" name="update" specification="_dhcfwNNCEem2FpOoiMKSDA">
          <language>java</language>
          <body>centerPanel.repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9BFtNCEem2FpOoiMKSDA" name="initGUI" specification="_dhcfwdNCEem2FpOoiMKSDA">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		setBounds(100, 100, 450, 300);&#xD;
		contentPane = new JPanel();&#xD;
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));&#xD;
		contentPane.setLayout(new BorderLayout(0, 0));&#xD;
		setContentPane(contentPane);&#xD;
		centerPanel.setToolTipText(&quot;Balls will appear here!&quot;);&#xD;
&#xD;
		contentPane.add(centerPanel, BorderLayout.CENTER);&#xD;
&#xD;
		contentPane.add(northPanel, BorderLayout.NORTH);&#xD;
		makeBallButton.setToolTipText(&quot;Click to make a ball!&quot;);&#xD;
		makeBallButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				view2ModelAdpt.addBall(dropDown.getSelectedItem().toString(), centerPanel);&#xD;
				centerPanel.repaint();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		dropDown.setToolTipText(&quot;Select or type the ball you want!&quot;);&#xD;
		dropDown.setEditable(true);&#xD;
		dropDown.setModel(new DefaultComboBoxModel&lt;String>(&#xD;
				new String[] { &quot;Straight&quot;, &quot;VelChange&quot;, &quot;Trippy&quot;, &quot;ColorBreathing&quot;, &quot;Random&quot; }));&#xD;
&#xD;
		northPanel.add(dropDown);&#xD;
&#xD;
		northPanel.add(makeBallButton);&#xD;
		clearAllButton.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				view2ModelAdpt.clearAll();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		clearAllButton.setToolTipText(&quot;Click to clear all balls!&quot;);&#xD;
&#xD;
		northPanel.add(clearAllButton);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq9BF9NCEem2FpOoiMKSDA" name="MyFrame" specification="_dpVQcNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq9BGNNCEem2FpOoiMKSDA" name="view2ModelAdapter" type="_dhXnQNNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dq9BGdNCEem2FpOoiMKSDA" type="_dhaqkNNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>initGUI();&#xD;
		view2ModelAdpt = view2ModelAdapter;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dhb4sNNCEem2FpOoiMKSDA" name="start" method="_dq9BFNNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDuwdNCEem2FpOoiMKSDA">
            <body>Starts the frame</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dhcfwNNCEem2FpOoiMKSDA" name="update" method="_dq9BFdNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDuwtNCEem2FpOoiMKSDA">
            <body>Updates the center panel</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dhcfwdNCEem2FpOoiMKSDA" name="initGUI" method="_dq9BFtNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drDuw9NCEem2FpOoiMKSDA">
            <body>Initializes the GUI</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dpVQcNNCEem2FpOoiMKSDA" name="MyFrame" method="_dq9BF9NCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dpVQctNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dpVQc9NCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_drDuxNNCEem2FpOoiMKSDA">
            <body>Create the frame and assign the view-to-model adapter.&#xD;
	 * &#xD;
	 * @param view2ModelAdapter View-to-model adapter to send desired actions to model</body>
          </ownedComment>
          <ownedParameter xmi:id="_dpVQcdNCEem2FpOoiMKSDA" name="view2ModelAdapter" type="_dhXnQNNCEem2FpOoiMKSDA"/>
          <ownedParameter xmi:id="_dpVQdNNCEem2FpOoiMKSDA" type="_dhaqkNNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drNfwdNCEem2FpOoiMKSDA" name="" memberEnd="_drNfwtNCEem2FpOoiMKSDA _dhY1YdNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drNfwtNCEem2FpOoiMKSDA" name="" type="_dhXnQNNCEem2FpOoiMKSDA" association="_drNfwdNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drTmYdNCEem2FpOoiMKSDA" name="" memberEnd="_drTmYtNCEem2FpOoiMKSDA _dqrUQ9NCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drTmYtNCEem2FpOoiMKSDA" name="" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drTmYdNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drUNcdNCEem2FpOoiMKSDA" name="" memberEnd="_drUNctNCEem2FpOoiMKSDA _dqr7UdNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drUNctNCEem2FpOoiMKSDA" name="" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drUNcdNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drU0gdNCEem2FpOoiMKSDA" name="" memberEnd="_drU0gtNCEem2FpOoiMKSDA _dqr7VNNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drU0gtNCEem2FpOoiMKSDA" name="" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drU0gdNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drU0hNNCEem2FpOoiMKSDA" name="" memberEnd="_drU0hdNCEem2FpOoiMKSDA _dqsiYtNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drU0hdNCEem2FpOoiMKSDA" name="" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drU0hNNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drVbkdNCEem2FpOoiMKSDA" name="" memberEnd="_drVbktNCEem2FpOoiMKSDA _dqtJcdNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drVbktNCEem2FpOoiMKSDA" name="" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drVbkdNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drWCodNCEem2FpOoiMKSDA" name="" memberEnd="_drWCotNCEem2FpOoiMKSDA _dqtwgdNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drWCotNCEem2FpOoiMKSDA" name="" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drWCodNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drWpsdNCEem2FpOoiMKSDA" name="" memberEnd="_drWpstNCEem2FpOoiMKSDA _dquXktNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drWpstNCEem2FpOoiMKSDA" name="" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drWpsdNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drXQwdNCEem2FpOoiMKSDA" name="" memberEnd="_drXQwtNCEem2FpOoiMKSDA _dquXldNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drXQwtNCEem2FpOoiMKSDA" name="" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drXQwdNCEem2FpOoiMKSDA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_desGsNNCEem2FpOoiMKSDA" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_dgZW4NNCEem2FpOoiMKSDA" name="Controller">
        <ownedComment xmi:id="_drArcdNCEem2FpOoiMKSDA">
          <body>Controller that allows communication between the model and view &#xD;
without them knowing each other.&#xD;
&#xD;
@author BJ Kim and William Su&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_dqgVIdNCEem2FpOoiMKSDA" name="model" visibility="private" type="_dgCxkNNCEem2FpOoiMKSDA" association="_drP8ANNCEem2FpOoiMKSDA"/>
        <ownedAttribute xmi:id="_dqg8MdNCEem2FpOoiMKSDA" name="view" visibility="private" type="_dhaqkNNCEem2FpOoiMKSDA" association="_drQjEdNCEem2FpOoiMKSDA"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq26cNNCEem2FpOoiMKSDA" name="Controller" specification="_dgZ98NNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq26cdNCEem2FpOoiMKSDA" type="_dgZW4NNCEem2FpOoiMKSDA" direction="return"/>
          <language>java</language>
          <body>/**&#xD;
		 * Instantiates the model&#xD;
		 */&#xD;
		model = new Model(new IModel2ViewAdapter() {&#xD;
&#xD;
			/** &#xD;
			 * Repaints the center panel of the GUI &#xD;
			 */&#xD;
			public void update() {&#xD;
				view.update();&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Instantiates the view&#xD;
		 */&#xD;
		view = new MyFrame(new IView2ModelAdapter() {&#xD;
			/**&#xD;
			 *  Calls model's dispatcher to update all balls&#xD;
			 */&#xD;
			public void update(Graphics g) {&#xD;
				model.update(g);&#xD;
			}&#xD;
&#xD;
			/** &#xD;
			 * Adds the desired ball to our current dispatcher&#xD;
			 * &#xD;
			 * @param className String of ball type desired&#xD;
			 * @param frame Frame to draw the ball on&#xD;
			 */&#xD;
			public void addBall(String className, Component frame) {&#xD;
				model.addBall(className, frame);&#xD;
			}&#xD;
&#xD;
			/**&#xD;
			 * Clears all ball from the dispatcher&#xD;
			 */&#xD;
			public void clearAll() {&#xD;
				model.clearAll();&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq26ctNCEem2FpOoiMKSDA" name="start" specification="_dgalA9NCEem2FpOoiMKSDA">
          <language>java</language>
          <body>model.start();&#xD;
		view.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dq26c9NCEem2FpOoiMKSDA" name="main" specification="_dgalBNNCEem2FpOoiMKSDA">
          <ownedParameter xmi:id="_dq26dNNCEem2FpOoiMKSDA" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dq26ddNCEem2FpOoiMKSDA" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() { // Java specs say that the system must be constructed on the GUI event thread.&#xD;
			public void run() {&#xD;
				try {&#xD;
					Controller controller = new Controller(); // instantiate the system&#xD;
					controller.start(); // start the system&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dgZ98NNCEem2FpOoiMKSDA" name="Controller" method="_dq26cNNCEem2FpOoiMKSDA">
          <eAnnotations xmi:id="_dgalANNCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dgalAdNCEem2FpOoiMKSDA" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_drArctNCEem2FpOoiMKSDA">
            <body>Controller constructor builds the system</body>
          </ownedComment>
          <ownedParameter xmi:id="_dgalAtNCEem2FpOoiMKSDA" type="_dgZW4NNCEem2FpOoiMKSDA" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dgalA9NCEem2FpOoiMKSDA" name="start" method="_dq26ctNCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drArc9NCEem2FpOoiMKSDA">
            <body>Start the system</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dgalBNNCEem2FpOoiMKSDA" name="main" isStatic="true" method="_dq26c9NCEem2FpOoiMKSDA">
          <ownedComment xmi:id="_drBSgNNCEem2FpOoiMKSDA">
            <body>Launch the application.&#xD;
	 * &#xD;
	 * @param args Arguments given by the system or command line.</body>
          </ownedComment>
          <ownedParameter xmi:id="_dgalBdNCEem2FpOoiMKSDA" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dgbMENNCEem2FpOoiMKSDA" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drP8ANNCEem2FpOoiMKSDA" name="" memberEnd="_drP8AdNCEem2FpOoiMKSDA _dqgVIdNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drP8AdNCEem2FpOoiMKSDA" name="" type="_dgZW4NNCEem2FpOoiMKSDA" association="_drP8ANNCEem2FpOoiMKSDA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_drQjEdNCEem2FpOoiMKSDA" name="" memberEnd="_drQjEtNCEem2FpOoiMKSDA _dqg8MdNCEem2FpOoiMKSDA">
        <ownedEnd xmi:id="_drQjEtNCEem2FpOoiMKSDA" name="" type="_dgZW4NNCEem2FpOoiMKSDA" association="_drQjEdNCEem2FpOoiMKSDA"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_dJJUgtNCEem2FpOoiMKSDA">
      <eAnnotations xmi:id="_dJJUg9NCEem2FpOoiMKSDA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_dJJ7kNNCEem2FpOoiMKSDA" base_Package="_c-0T0NNCEem2FpOoiMKSDA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dgKGUNNCEem2FpOoiMKSDA" base_Element="_dgJfQNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dgKtYNNCEem2FpOoiMKSDA" base_Element="_dgJfQNNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dgKtYdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dgTQQNNCEem2FpOoiMKSDA" base_Element="_dgSpMNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dgTQQdNCEem2FpOoiMKSDA" base_Element="_dgSpMNNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dgTQQtNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dgXhstNCEem2FpOoiMKSDA" base_Element="_dgW6oNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dgYIwNNCEem2FpOoiMKSDA" base_Element="_dgW6oNNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dgYIwdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dgdBQNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dgbzINNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dgePYNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dgdoUNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dgfdgNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dge2cNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dgh5wNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dghSsNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dgju8NNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dgig0NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dgk9ENNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dgkWANNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dgmyQNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dglkINNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dgmyQdNCEem2FpOoiMKSDA" base_Element="_dglkINNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dgnZUNNCEem2FpOoiMKSDA" base_Element="_dglkINNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dgnZUdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dgoncNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dgnZUtNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dgpOgNNCEem2FpOoiMKSDA" base_Element="_dgnZUtNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dgp1kNNCEem2FpOoiMKSDA" base_Element="_dgnZUtNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dgp1kdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dgtf8NNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dgsR0NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dgvVINNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dguuENNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dgyYcNNCEem2FpOoiMKSDA" genericsValue="Image, Component, IATImage" base_Element="_dgxxYNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dgy_gdNCEem2FpOoiMKSDA" base_Element="_dgxxYNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dg3Q8NNCEem2FpOoiMKSDA" genericsValue="ReturnT" base_Element="_dg2C0dNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dg5tMNNCEem2FpOoiMKSDA" genericsValue="ReturnT" base_Element="_dg4fENNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dhKy8NNCEem2FpOoiMKSDA" base_Element="_dhKL4NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dhMBEdNCEem2FpOoiMKSDA" base_Element="_dhLaANNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dhMBEtNCEem2FpOoiMKSDA" base_Element="_dhLaANNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dhMBE9NCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dhNPMNNCEem2FpOoiMKSDA" base_Element="_dhMoINNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dhNPMdNCEem2FpOoiMKSDA" base_Element="_dhMoINNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dhNPMtNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dhOdUNNCEem2FpOoiMKSDA" base_Element="_dhN2QNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dhOdUdNCEem2FpOoiMKSDA" base_Element="_dhN2QNNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dhOdUtNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dhVLAdNCEem2FpOoiMKSDA" base_Element="_dhUj9tNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dhVLAtNCEem2FpOoiMKSDA" base_Element="_dhUj9tNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dhVLA9NCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dhVyEtNCEem2FpOoiMKSDA" base_Element="_dhVyENNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dhWZINNCEem2FpOoiMKSDA" base_Element="_dhVyENNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dhWZIdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dokbcNNCEem2FpOoiMKSDA" base_Element="_doj0YNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dolCgNNCEem2FpOoiMKSDA" base_Element="_dokbcdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dolpkNNCEem2FpOoiMKSDA" base_Element="_dolCgdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_domQoNNCEem2FpOoiMKSDA" base_Element="_dolpkdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dom3sNNCEem2FpOoiMKSDA" base_Element="_domQodNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_donewNNCEem2FpOoiMKSDA" base_Element="_dom3sdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dooF0dNCEem2FpOoiMKSDA" base_Element="_dooF0NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_doos4NNCEem2FpOoiMKSDA" base_Element="_dooF0tNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_douzgNNCEem2FpOoiMKSDA" base_Element="_douMcNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dox20NNCEem2FpOoiMKSDA" base_Element="_doxPwNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dozE8NNCEem2FpOoiMKSDA" base_Element="_doyd4NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dozsAdNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dozE8tNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_do0TENNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dozsAtNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_do06INNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dozsA9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_do2vUNNCEem2FpOoiMKSDA" base_Element="_do2IQNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_do3WYNNCEem2FpOoiMKSDA" base_Element="_do2vUdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_do39cNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_do3WYdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_do5Lk9NCEem2FpOoiMKSDA" base_Element="_do5LkNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_do5yoNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_do5LkdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_do6ZsNNCEem2FpOoiMKSDA" base_Element="_do5LkNNCEem2FpOoiMKSDA">
    <annotations xmi:id="_do6ZsdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_do7AwNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_do6ZstNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_do7n0dNCEem2FpOoiMKSDA" base_Element="_do6ZstNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_do8O4NNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_do6Zs9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_do8O4dNCEem2FpOoiMKSDA" base_Element="_do6ZstNCEem2FpOoiMKSDA">
    <annotations xmi:id="_do8O4tNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_do-EENNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_do9dANNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_do_SMNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_do-rINNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpAgUNNCEem2FpOoiMKSDA" base_Element="_do_5QNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpAgUtNCEem2FpOoiMKSDA" base_Element="_dpAgUdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpBHYdNCEem2FpOoiMKSDA" base_Element="_dpBHYNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpBucdNCEem2FpOoiMKSDA" base_Element="_dpBucNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpCVgNNCEem2FpOoiMKSDA" base_Element="_dpBuctNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpC8kNNCEem2FpOoiMKSDA" base_Element="_dpCVgdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpExwNNCEem2FpOoiMKSDA" base_Element="_dpEKsNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpFY0NNCEem2FpOoiMKSDA" base_Element="_dpExwdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpF_4NNCEem2FpOoiMKSDA" base_Element="_dpFY0dNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpF_4tNCEem2FpOoiMKSDA" base_Element="_dpF_4dNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dpGm8NNCEem2FpOoiMKSDA" genericsValue="ReturnT" base_Element="_dpF_49NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpQX8NNCEem2FpOoiMKSDA" base_Element="_dpPw4NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpQX8tNCEem2FpOoiMKSDA" base_Element="_dpQX8dNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpQ_AdNCEem2FpOoiMKSDA" base_Element="_dpQ_ANNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpRmENNCEem2FpOoiMKSDA" base_Element="_dpQ_AtNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpSNINNCEem2FpOoiMKSDA" base_Element="_dpRmEdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpS0MNNCEem2FpOoiMKSDA" base_Element="_dpSNIdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpTbQNNCEem2FpOoiMKSDA" base_Element="_dpS0MdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpUCUNNCEem2FpOoiMKSDA" base_Element="_dpTbQdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpUCUtNCEem2FpOoiMKSDA" base_Element="_dpUCUdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dpYTwNNCEem2FpOoiMKSDA" genericsValue="Graphics" base_Element="_dpXssNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpqAkNNCEem2FpOoiMKSDA" base_Element="_dppZgNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dpr1wNNCEem2FpOoiMKSDA" genericsValue="TMsg" base_Element="_dprOsdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpuSANNCEem2FpOoiMKSDA" base_Element="_dptq8NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dpu5ENNCEem2FpOoiMKSDA" base_Element="_dpuSAdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dpu5EdNCEem2FpOoiMKSDA" base_Element="_dpuSAdNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dpu5EtNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dpvgItNCEem2FpOoiMKSDA" base_Element="_dpvgINNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dpwHMNNCEem2FpOoiMKSDA" base_Element="_dpvgINNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dpwHMdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dpyjcNNCEem2FpOoiMKSDA" base_Element="_dpxVUNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dpzKgNNCEem2FpOoiMKSDA" base_Element="_dpyjcdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dp0YoNNCEem2FpOoiMKSDA" base_Element="_dpzxkNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Array xmi:id="_dp0YotNCEem2FpOoiMKSDA" base_Element="_dpzxktNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dp1mwNNCEem2FpOoiMKSDA" base_Element="_dp0_sNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dp3b8NNCEem2FpOoiMKSDA" genericsValue="Object[], ReturnT" base_Element="_dp204NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dp4qENNCEem2FpOoiMKSDA" base_Element="_dp4DANNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dp5RItNCEem2FpOoiMKSDA" base_Element="_dp4qEdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Array xmi:id="_dp54MdNCEem2FpOoiMKSDA" base_Element="_dp5RINNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dp6fQNNCEem2FpOoiMKSDA" base_Element="_dp4qEdNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dp6fQdNCEem2FpOoiMKSDA" name="Override"/>
    <annotations xmi:id="_dp6fQtNCEem2FpOoiMKSDA" name="SuppressWarnings">
      <annotationParameters xmi:id="_dp6fQ9NCEem2FpOoiMKSDA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_drCgodNCEem2FpOoiMKSDA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dp8UcNNCEem2FpOoiMKSDA" base_Element="_dp7GUNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dp87gNNCEem2FpOoiMKSDA" base_Element="_dp8UcdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dp-JoNNCEem2FpOoiMKSDA" genericsValue="?" base_Element="_dp9ikNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dp_XwNNCEem2FpOoiMKSDA" genericsValue="?" base_Element="_dp9ikdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Array xmi:id="_dp_XwtNCEem2FpOoiMKSDA" base_Element="_dp9iktNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dqBM8NNCEem2FpOoiMKSDA" genericsValue="?" base_Element="_dqAl4dNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dqDpMNNCEem2FpOoiMKSDA" base_Element="_dqCbE9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqHTkdNCEem2FpOoiMKSDA" base_Element="_dqGFcNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dqH6oNNCEem2FpOoiMKSDA" base_Element="_dqGFcNNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dqH6odNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqJIwNNCEem2FpOoiMKSDA" base_Element="_dqH6otNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dqKW4NNCEem2FpOoiMKSDA" base_Element="_dqH6otNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dqKW4dNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqK98dNCEem2FpOoiMKSDA" base_Element="_dqKW4tNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dqLlANNCEem2FpOoiMKSDA" base_Element="_dqKW4tNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dqLlAdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqNaMNNCEem2FpOoiMKSDA" base_Element="_dqMMENNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dqNaMdNCEem2FpOoiMKSDA" base_Element="_dqMMENNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dqNaMtNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqOBQ9NCEem2FpOoiMKSDA" base_Element="_dqNaM9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dqOoUNNCEem2FpOoiMKSDA" base_Element="_dqNaM9NCEem2FpOoiMKSDA">
    <annotations xmi:id="_dqOoUdNCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqP2ddNCEem2FpOoiMKSDA" base_Element="_dqP2cNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Annotations xmi:id="_dqP2dtNCEem2FpOoiMKSDA" base_Element="_dqP2cNNCEem2FpOoiMKSDA">
    <annotations xmi:id="_dqP2d9NCEem2FpOoiMKSDA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dqYZUNNCEem2FpOoiMKSDA" genericsValue="Graphics" base_Element="_dqXyQNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqbcodNCEem2FpOoiMKSDA" base_Element="_dqa1kNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqcDstNCEem2FpOoiMKSDA" base_Element="_dqbcotNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dqdR0NNCEem2FpOoiMKSDA" genericsValue="Graphics" base_Element="_dqcDs9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqd44dNCEem2FpOoiMKSDA" base_Element="_dqcDs9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqef8dNCEem2FpOoiMKSDA" base_Element="_dqd44tNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqfHAdNCEem2FpOoiMKSDA" base_Element="_dqef8tNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqgVINNCEem2FpOoiMKSDA" base_Element="_dqfuENNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqg8MNNCEem2FpOoiMKSDA" base_Element="_dqgVIdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqhjQNNCEem2FpOoiMKSDA" base_Element="_dqg8MdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dqiKUdNCEem2FpOoiMKSDA" genericsValue="IObserver&lt;TMsg>" base_Element="_dqiKUNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqjYcNNCEem2FpOoiMKSDA" base_Element="_dqiKUNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dqjYctNCEem2FpOoiMKSDA" genericsValue="IObserver&lt;TMsg>" base_Element="_dqjYcdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqj_gNNCEem2FpOoiMKSDA" base_Element="_dqjYcdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dqlNoNNCEem2FpOoiMKSDA" genericsValue="?" base_Element="_dqkmkNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dql0sdNCEem2FpOoiMKSDA" base_Element="_dqkmkNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_dql0s9NCEem2FpOoiMKSDA" base_Element="_dql0stNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dqnC0NNCEem2FpOoiMKSDA" genericsValue="?" base_Element="_dqmbwNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dqnp4dNCEem2FpOoiMKSDA" genericsValue="Object[], ReturnT" base_Element="_dqnp4NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqoQ8NNCEem2FpOoiMKSDA" base_Element="_dqnp4NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqo4AtNCEem2FpOoiMKSDA" base_Element="_dqo4ANNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqpfEdNCEem2FpOoiMKSDA" base_Element="_dqpfENNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqqGINNCEem2FpOoiMKSDA" base_Element="_dqpfEtNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqqGItNCEem2FpOoiMKSDA" base_Element="_dqqGIdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqrUQNNCEem2FpOoiMKSDA" base_Element="_dqqtMNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqr7UNNCEem2FpOoiMKSDA" base_Element="_dqrUQ9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqr7U9NCEem2FpOoiMKSDA" base_Element="_dqr7UdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqsiYdNCEem2FpOoiMKSDA" base_Element="_dqr7VNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqtJcNNCEem2FpOoiMKSDA" base_Element="_dqsiYtNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqtwgNNCEem2FpOoiMKSDA" base_Element="_dqtJcdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dquXkdNCEem2FpOoiMKSDA" base_Element="_dqtwgdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dquXlNNCEem2FpOoiMKSDA" base_Element="_dquXktNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Generics xmi:id="_dqu-oNNCEem2FpOoiMKSDA" genericsValue="String" base_Element="_dquXldNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqvlsNNCEem2FpOoiMKSDA" base_Element="_dquXldNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqwMwNNCEem2FpOoiMKSDA" base_Element="_dqvlsdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqwMwtNCEem2FpOoiMKSDA" base_Element="_dqwMwdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqwz0NNCEem2FpOoiMKSDA" base_Element="_dqwMw9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqwz0tNCEem2FpOoiMKSDA" base_Element="_dqwz0dNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqxa4dNCEem2FpOoiMKSDA" base_Element="_dqxa4NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drMRoNNCEem2FpOoiMKSDA" base_Element="_drLqkNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drM4sNNCEem2FpOoiMKSDA" base_Element="_drMRodNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drNfwNNCEem2FpOoiMKSDA" base_Element="_drM4sdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drOG0NNCEem2FpOoiMKSDA" base_Element="_drNfwdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drOG09NCEem2FpOoiMKSDA" base_Element="_drOG0dNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drOt4NNCEem2FpOoiMKSDA" base_Element="_drOG1NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drPU8NNCEem2FpOoiMKSDA" base_Element="_drOt4dNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drQjENNCEem2FpOoiMKSDA" base_Element="_drP8ANNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drRKINNCEem2FpOoiMKSDA" base_Element="_drQjEdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drRxMNNCEem2FpOoiMKSDA" base_Element="_drRKIdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drSYQNNCEem2FpOoiMKSDA" base_Element="_drRxMdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drSYQ9NCEem2FpOoiMKSDA" base_Element="_drSYQdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drS_UtNCEem2FpOoiMKSDA" base_Element="_drS_UNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drTmYNNCEem2FpOoiMKSDA" base_Element="_drS_U9NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drUNcNNCEem2FpOoiMKSDA" base_Element="_drTmYdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drU0gNNCEem2FpOoiMKSDA" base_Element="_drUNcdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drU0g9NCEem2FpOoiMKSDA" base_Element="_drU0gdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drVbkNNCEem2FpOoiMKSDA" base_Element="_drU0hNNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drWCoNNCEem2FpOoiMKSDA" base_Element="_drVbkdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drWpsNNCEem2FpOoiMKSDA" base_Element="_drWCodNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drXQwNNCEem2FpOoiMKSDA" base_Element="_drWpsdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drXQw9NCEem2FpOoiMKSDA" base_Element="_drXQwdNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drX30tNCEem2FpOoiMKSDA" base_Element="_drX30NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drYe4tNCEem2FpOoiMKSDA" base_Element="_drYe4NNCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drZF8NNCEem2FpOoiMKSDA" base_Element="_drYe49NCEem2FpOoiMKSDA"/>
  <UMLLabProfile:Reference xmi:id="_drZtANNCEem2FpOoiMKSDA" base_Element="_drZF8dNCEem2FpOoiMKSDA"/>
</xmi:XMI>
